{"ast":null,"code":"import HeaderComponent from \"@/admins/components/header-component.vue\";\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\nimport userService from \"@/public/services/userService\";\nexport default {\n  components: {\n    HeaderComponent,\n    SidebarComponent\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      userData: {\n        username: '',\n        password: '',\n        restaurantName: '',\n        phone: '',\n        email: '',\n        city: '',\n        district: ''\n      }\n    };\n  },\n  mounted() {\n    this.fetchUserData();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          const restaurantData = await userService.getRestaurantById(restaurantId);\n          this.userData = {\n            ...this.userData,\n            restaurantId: restaurantData.id,\n            username: restaurantData.username,\n            restaurantName: restaurantData.name,\n            phone: restaurantData.phone,\n            email: restaurantData.email,\n            city: restaurantData.city,\n            district: restaurantData.district\n          };\n          this.restaurantName = restaurantData.name;\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    async updateRestaurant() {\n      try {\n        const updatedDetails = {\n          restaurantId: this.userData.restaurantId,\n          username: this.userData.username,\n          password: this.userData.password,\n          name: this.userData.restaurantName,\n          phone: this.userData.phone,\n          email: this.userData.email,\n          city: this.userData.city,\n          district: this.userData.district,\n          image: this.userData.image // Agregar campo de imagen si es aplicable\n        };\n        await userService.updateRestaurantById(this.userData.id, updatedDetails);\n        alert(\"User details updated successfully!\");\n      } catch (error) {\n        console.error(\"Error updating user details:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["HeaderComponent","SidebarComponent","userService","components","data","restaurantName","userRole","userData","username","password","phone","email","city","district","mounted","fetchUserData","methods","JSON","parse","localStorage","getItem","restaurantId","restaurantData","getRestaurantById","id","name","role","error","console","updateRestaurant","updatedDetails","image","updateRestaurantById","alert"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\profile-views\\profile-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <sidebar-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"sidebar\" />\r\n    <div class=\"main-content\">\r\n      <header-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"header\" />\r\n      <div class=\"page-container\">\r\n        <p class=\"title\">Edit User Details</p>\r\n        <form @submit.prevent=\"updateRestaurant\" class=\"form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username:</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"userData.username\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"userData.password\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Confirm Password:</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"userData.password\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"restaurant-name\">Restaurant Name:</label>\r\n            <input type=\"text\" id=\"restaurant-name\" v-model=\"userData.restaurantName\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">Phone:</label>\r\n            <input type=\"tel\" id=\"phone\" v-model=\"userData.phone\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" v-model=\"userData.email\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"city\">City:</label>\r\n            <input type=\"text\" id=\"city\" v-model=\"userData.city\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"district\">District:</label>\r\n            <input type=\"text\" id=\"district\" v-model=\"userData.district\" required />\r\n          </div>\r\n          <button type=\"submit\" class=\"submit-button\">Update</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\r\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\r\nimport userService from \"@/public/services/userService\";\r\n\r\nexport default {\r\n  components: {\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      userData: {\r\n        username: '',\r\n        password: '',\r\n        restaurantName: '',\r\n        phone: '',\r\n        email: '',\r\n        city: '',\r\n        district: '',\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData();\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          const restaurantData = await userService.getRestaurantById(restaurantId);\r\n          this.userData = {\r\n            ...this.userData,\r\n            restaurantId: restaurantData.id,\r\n            username: restaurantData.username,\r\n            restaurantName: restaurantData.name,\r\n            phone: restaurantData.phone,\r\n            email: restaurantData.email,\r\n            city: restaurantData.city,\r\n            district: restaurantData.district,\r\n          };\r\n          this.restaurantName = restaurantData.name;\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n\r\n    async updateRestaurant() {\r\n      try {\r\n        const updatedDetails = {\r\n          restaurantId: this.userData.restaurantId,\r\n          username: this.userData.username,\r\n          password: this.userData.password,\r\n          name: this.userData.restaurantName,\r\n          phone: this.userData.phone,\r\n          email: this.userData.email,\r\n          city: this.userData.city,\r\n          district: this.userData.district,\r\n          image: this.userData.image, // Agregar campo de imagen si es aplicable\r\n        };\r\n\r\n        await userService.updateRestaurantById(this.userData.id, updatedDetails);\r\n        alert(\"User details updated successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error updating user details:\", error);\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n.sidebar {\r\n  width: 280px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: #31304A;\r\n}\r\n.main-content {\r\n  margin-left: 280px; /* Desplaza el contenido a la derecha del sidebar */\r\n  width: calc(100% - 280px); /* Ajusta el ancho para ocupar el resto de la pantalla */\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: #5E5E99;\r\n  z-index: 1;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n.page-container {\r\n  margin-top: 100px; /* Desplaza el contenido principal por debajo del header */\r\n  padding: 20px;\r\n  background-color: #F6F5FA; /* Fondo blanco para la zona de contenido */\r\n  height: calc(100vh - 100px); /* Ajusta el alto para evitar desbordamientos */\r\n  overflow-y: auto; /* Permite el scroll si el contenido es muy largo */\r\n  font-family: 'Red Hat Display', sans-serif;\r\n}\r\n\r\n.title {\r\n  font-weight: 800;\r\n  font-size: 1.5rem;\r\n  max-width: 1000px;\r\n  padding-bottom: 10px;\r\n  color: #31304A;\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  font-size: 0.8rem;\r\n}\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n}\r\n.form-group label {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #31304A;\r\n}\r\n.form-group input {\r\n  padding: 10px;\r\n  background-color: #D3D2E5;\r\n  border: 1px solid #F6F5FA;\r\n  border-radius: 5px;\r\n  font-size: 0.7rem;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #31304A;\r\n  color: #F6F5FA;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  transition: background-color 0.3s;\r\n  max-width: 600px;\r\n}\r\n.submit-button:active {\r\n  background-color: #201E35;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,OAAOA,eAAc,MAAO,0CAA0C;AACtE,OAAOC,gBAAe,MAAO,2CAA2C;AACxE,OAAOC,WAAU,MAAO,+BAA+B;AAEvD,eAAe;EACbC,UAAU,EAAE;IACVH,eAAe;IACfC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZJ,cAAc,EAAE,EAAE;QAClBK,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMR,QAAO,GAAIU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAMC,YAAW,GAAId,QAAQ,EAAEc,YAAY;QAE3C,IAAIA,YAAY,EAAE;UAChB,MAAMC,cAAa,GAAI,MAAMpB,WAAW,CAACqB,iBAAiB,CAACF,YAAY,CAAC;UACxE,IAAI,CAACd,QAAO,GAAI;YACd,GAAG,IAAI,CAACA,QAAQ;YAChBc,YAAY,EAAEC,cAAc,CAACE,EAAE;YAC/BhB,QAAQ,EAAEc,cAAc,CAACd,QAAQ;YACjCH,cAAc,EAAEiB,cAAc,CAACG,IAAI;YACnCf,KAAK,EAAEY,cAAc,CAACZ,KAAK;YAC3BC,KAAK,EAAEW,cAAc,CAACX,KAAK;YAC3BC,IAAI,EAAEU,cAAc,CAACV,IAAI;YACzBC,QAAQ,EAAES,cAAc,CAACT;UAC3B,CAAC;UACD,IAAI,CAACR,cAAa,GAAIiB,cAAc,CAACG,IAAI;UACzC,IAAI,CAACnB,QAAO,GAAIC,QAAQ,CAACmB,IAAI;QAC/B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAED,MAAME,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,cAAa,GAAI;UACrBT,YAAY,EAAE,IAAI,CAACd,QAAQ,CAACc,YAAY;UACxCb,QAAQ,EAAE,IAAI,CAACD,QAAQ,CAACC,QAAQ;UAChCC,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAACE,QAAQ;UAChCgB,IAAI,EAAE,IAAI,CAAClB,QAAQ,CAACF,cAAc;UAClCK,KAAK,EAAE,IAAI,CAACH,QAAQ,CAACG,KAAK;UAC1BC,KAAK,EAAE,IAAI,CAACJ,QAAQ,CAACI,KAAK;UAC1BC,IAAI,EAAE,IAAI,CAACL,QAAQ,CAACK,IAAI;UACxBC,QAAQ,EAAE,IAAI,CAACN,QAAQ,CAACM,QAAQ;UAChCkB,KAAK,EAAE,IAAI,CAACxB,QAAQ,CAACwB,KAAK,CAAE;QAC9B,CAAC;QAED,MAAM7B,WAAW,CAAC8B,oBAAoB,CAAC,IAAI,CAACzB,QAAQ,CAACiB,EAAE,EAAEM,cAAc,CAAC;QACxEG,KAAK,CAAC,oCAAoC,CAAC;MAC7C,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}