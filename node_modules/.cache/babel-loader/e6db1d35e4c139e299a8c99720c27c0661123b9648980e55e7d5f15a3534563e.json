{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nconst API_URL = 'http://localhost:3000/restaurants';\nexport const ordersService = {\n  async getOrdersByRestaurant(restaurantName) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(restaurant => restaurant['business-name'] === restaurantName);\n      if (restaurant) {\n        console.log(restaurant.orders);\n        return restaurant.orders || [];\n      } else {\n        throw new Error('Restaurant not found');\n      }\n    } catch (error) {\n      console.error(\"Error fetching orders: \", error);\n      throw error;\n    }\n  },\n  async addOrder(restaurantName, order) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const lastOrder = restaurant.orders[restaurant.orders.length - 1];\n        const newId = lastOrder ? lastOrder.id + 1 : 1;\n        order.id = newId;\n        restaurant.orders.push(order);\n        await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n        return {\n          success: true,\n          message: \"Order created successfully\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error adding order: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  async updateOrder(restaurantName, order) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const index = restaurant.orders.findIndex(p => p.id === order.id);\n        if (index !== -1) {\n          restaurant.orders.splice(index, 1, order);\n          await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n          return {\n            success: true,\n            message: \"Order updated successfully\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Order not found\"\n          };\n        }\n      }\n    } catch (error) {\n      console.error(\"Error updating order: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  async deleteOrder(restaurantName, orderId) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const index = restaurant.orders.findIndex(p => p.id === orderId);\n        if (index !== -1) {\n          restaurant.orders.splice(index, 1);\n          await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n\n          // Devolver respuesta con éxito\n          return {\n            success: true,\n            message: \"Order deleted successfully\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Order not found\"\n          };\n        }\n      } else {\n        return {\n          success: false,\n          message: \"Restaurant not found\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error deleting order: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","ordersService","getOrdersByRestaurant","restaurantName","response","get","restaurant","data","find","console","log","orders","Error","error","addOrder","order","r","lastOrder","length","newId","id","push","put","success","message","updateOrder","index","findIndex","p","splice","deleteOrder","orderId"],"sources":["E:/kitchen-tech-repo/src/public/services/ordersService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = 'http://localhost:3000/restaurants';\r\n\r\nexport const ordersService = {\r\n    async getOrdersByRestaurant(restaurantName) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(restaurant => restaurant['business-name'] === restaurantName);\r\n            if (restaurant) {\r\n                console.log(restaurant.orders);\r\n                return restaurant.orders || [];\r\n            } else {\r\n                throw new Error('Restaurant not found');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching orders: \", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async addOrder(restaurantName, order) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const lastOrder = restaurant.orders[restaurant.orders.length - 1];\r\n                const newId = lastOrder ? lastOrder.id + 1 : 1;\r\n                order.id = newId;\r\n\r\n                restaurant.orders.push(order);\r\n                await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                return {success: true, message: \"Order created successfully\"};\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding order: \", error);\r\n            return {success: false, message: error.message};\r\n        }\r\n    },\r\n\r\n    async updateOrder(restaurantName, order) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const index = restaurant.orders.findIndex(p => p.id === order.id);\r\n\r\n                if (index !== -1) {\r\n                    restaurant.orders.splice(index, 1, order);\r\n                    await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                    return {success: true, message: \"Order updated successfully\"}\r\n                } else {\r\n                    return {success: false, message: \"Order not found\"};\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating order: \", error);\r\n            return {success: false, message: error.message}\r\n        }\r\n    },\r\n\r\n    async deleteOrder(restaurantName, orderId) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const index = restaurant.orders.findIndex(p => p.id === orderId);\r\n\r\n                if (index !== -1) {\r\n                    restaurant.orders.splice(index, 1);\r\n                    await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                    // Devolver respuesta con éxito\r\n                    return {success: true, message: \"Order deleted successfully\"};\r\n                } else {\r\n                    return {success: false, message: \"Order not found\"};\r\n                }\r\n            } else {\r\n                return {success: false, message: \"Restaurant not found\"};\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting order: \", error);\r\n            return {success: false, message: error.message};\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}