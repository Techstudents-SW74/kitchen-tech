{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = {\n  class: \"modal-header\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"form-inputs\"\n};\nconst _hoisted_6 = {\n  class: \"form-group account-name\"\n};\nconst _hoisted_7 = {\n  class: \"form-group table-number\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  type: \"submit\",\n  class: \"save-button\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.isUpdate ? 'Update Order' : 'Save Order'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.closeModal())\n  }, \"x\")]), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.save && $options.save(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"accountName\"\n  }, \"Account Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"accountName\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.accountName = $event),\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.handleAccountNameInput && $options.handleAccountNameInput(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.accountName]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"tableNumber\"\n  }, \"Mesa\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"tableNumber\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.tableNumber = $event),\n    disabled: $data.isUpdate\n  }, null, 8 /* PROPS */, _hoisted_8), [[_vModelText, $data.tableNumber]])])]), _createElementVNode(\"button\", _hoisted_9, _toDisplayString($data.isUpdate ? 'Update Order' : 'Save Order'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","type","$props","isVisible","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","isUpdate","onClick","_cache","$event","$options","closeModal","onSubmit","_withModifiers","args","save","_hoisted_5","_hoisted_6","for","id","accountName","onInput","handleAccountNameInput","_hoisted_7","tableNumber","disabled","_hoisted_8","_hoisted_9","_createCommentVNode"],"sources":["E:\\Kitchen Tech\\src\\admins\\views\\cassing-views\\components\\save-order-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <p class=\"title\">{{ isUpdate ? 'Update Order' : 'Save Order' }}</p>\r\n        <button class=\"close\" @click=\"closeModal()\">x</button>\r\n      </div>\r\n      <form @submit.prevent=\"save\">\r\n        <div class=\"form-inputs\">\r\n          <div class=\"form-group account-name\">\r\n            <label for=\"accountName\">Account Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"accountName\"\r\n                v-model=\"accountName\"\r\n                @input=\"handleAccountNameInput\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group table-number\">\r\n            <label for=\"tableNumber\">Mesa</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"tableNumber\"\r\n                v-model=\"tableNumber\"\r\n                :disabled=\"isUpdate\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"save-button\">\r\n          {{ isUpdate ? 'Update Order' : 'Save Order' }}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { accountService } from \"@/public/services/accountsService\";\r\n\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    restaurantId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      accountName: \"\",\r\n      tableNumber: \"\",\r\n      manualAccountName: \"\",\r\n      isUpdate: false,\r\n      existingAccountData: null\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    isVisible(newVal) {\r\n      if (newVal) {\r\n        this.loadExistingData();\r\n      }\r\n    },\r\n    tableNumber(newVal) {\r\n      if (!this.manualAccountName && !this.isUpdate) {\r\n        this.accountName = `Mesa: ${newVal}`;\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    loadExistingData() {\r\n      const accountData = JSON.parse(localStorage.getItem('accountData'));\r\n      if (accountData) {\r\n        this.existingAccountData = accountData;\r\n        this.isUpdate = true;\r\n        this.accountName = accountData.accountName;\r\n        this.tableNumber = accountData.table?.tableNumber?.toString() || '';\r\n      } else {\r\n        this.isUpdate = false;\r\n        this.existingAccountData = null;\r\n      }\r\n    },\r\n\r\n    handleAccountNameInput(event) {\r\n      if (!this.isUpdate) {\r\n        const prefix = `Mesa: ${this.tableNumber}`;\r\n        this.manualAccountName = event.target.value.startsWith(prefix)\r\n            ? event.target.value.slice(prefix.length).trimStart()\r\n            : event.target.value;\r\n\r\n        this.accountName = `${prefix} ${this.manualAccountName}`;\r\n      }\r\n    },\r\n\r\n    async updateExistingAccount() {\r\n      try {\r\n        const cartData = JSON.parse(localStorage.getItem('cartData')) || [];\r\n\r\n        // Crear el payload completo incluyendo los productos\r\n        const accountUpdatePayload = {\r\n          ...this.existingAccountData,\r\n          accountName: this.accountName,\r\n          dateLog: new Date().toISOString(),\r\n          totalAccount: cartData.reduce((total, item) => total + (item.price * item.quantity), 0),\r\n          // Incluir la lista completa de productos actualizada\r\n          products: cartData.map(product => ({\r\n            id: product.id,\r\n            quantity: product.quantity,\r\n            accountId: this.existingAccountData.id\r\n          }))\r\n        };\r\n\r\n        // Realizar una Ãºnica llamada para actualizar la cuenta con todos sus productos\r\n        await accountService.updateAccount(accountUpdatePayload);\r\n\r\n        this.$emit('account-updated');\r\n        this.resetFields();\r\n        localStorage.removeItem('cartData');\r\n      } catch (error) {\r\n        console.error('Error updating account:', error);\r\n        alert('Error updating account. Please try again.');\r\n      }\r\n    },\r\n    \r\n    async save() {\r\n      if (this.isUpdate) {\r\n        await this.updateExistingAccount();\r\n      } else {\r\n        this.$emit(\"save-sale\", this.accountName, this.tableNumber);\r\n      }\r\n      this.closeModal();\r\n    },\r\n\r\n    resetFields() {\r\n      this.accountName = \"\";\r\n      this.tableNumber = \"\";\r\n      this.manualAccountName = \"\";\r\n      this.isUpdate = false;\r\n      this.existingAccountData = null;\r\n    },\r\n\r\n    closeModal() {\r\n      this.resetFields();\r\n      this.$emit(\"close-modal\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: #F6F5FA;\r\n  color: #31304A;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  width: 550px;\r\n  max-width: 100%;\r\n}\r\n.modal-header{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.close{\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #31304A;\r\n  font-weight: 800;\r\n  padding: 0;\r\n  margin: 0;\r\n  align-self: flex-start;\r\n}\r\n\r\n.title{\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  margin: 0 0 15px 0;\r\n}\r\n.form-inputs{\r\n  display: flex;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n.account-name{\r\n  width: 410px;\r\n}\r\n.table-number{\r\n  margin-left: 24px;\r\n  max-width: 100px;\r\n}\r\n\r\nlabel{\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #D3D2E5;\r\n}\r\n.save-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n.save-button:active{\r\n  background-color: #201E35;\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAO;;EAIXA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAyB;;EAS/BA,KAAK,EAAC;AAAyB;mBAlB9C;;EA4BgBC,IAAI,EAAC,QAAQ;EAACD,KAAK,EAAC;;;SA3BTE,MAAA,CAAAC,SAAS,I,cAAlCC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJD,mBAAA,CAGM,OAHNE,UAGM,GAFJF,mBAAA,CAAmE,KAAnEG,UAAmE,EAAAC,gBAAA,CAA/CC,KAAA,CAAAC,QAAQ,kDAC5BN,mBAAA,CAAsD;IAA9CN,KAAK,EAAC,OAAO;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;KAAI,GAAC,E,GAE/CX,mBAAA,CAwBO;IAxBAY,QAAM,EAAAJ,MAAA,QAAAA,MAAA,MAPnBK,cAAA,KAAAC,IAAA,KAO6BJ,QAAA,CAAAK,IAAA,IAAAL,QAAA,CAAAK,IAAA,IAAAD,IAAA,CAAI;MACzBd,mBAAA,CAmBM,OAnBNgB,UAmBM,GAlBJhB,mBAAA,CAQM,OARNiB,UAQM,G,0BAPJjB,mBAAA,CAA6C;IAAtCkB,GAAG,EAAC;EAAa,GAAC,cAAY,sB,gBACrClB,mBAAA,CAKE;IAJEL,IAAI,EAAC,MAAM;IACXwB,EAAE,EAAC,aAAa;IAbhC,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcyBJ,KAAA,CAAAe,WAAW,GAAAX,MAAA;IACnBY,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEJ,QAAA,CAAAY,sBAAA,IAAAZ,QAAA,CAAAY,sBAAA,IAAAR,IAAA,CAAsB;iEADrBT,KAAA,CAAAe,WAAW,E,KAI1BpB,mBAAA,CAQM,OARNuB,UAQM,G,0BAPJvB,mBAAA,CAAqC;IAA9BkB,GAAG,EAAC;EAAa,GAAC,MAAI,sB,gBAC7BlB,mBAAA,CAKE;IAJEL,IAAI,EAAC,MAAM;IACXwB,EAAE,EAAC,aAAa;IAtBhC,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuByBJ,KAAA,CAAAmB,WAAW,GAAAf,MAAA;IACnBgB,QAAQ,EAAEpB,KAAA,CAAAC;0BAxB3BoB,UAAA,I,cAuByBrB,KAAA,CAAAmB,WAAW,E,OAK5BxB,mBAAA,CAES,UAFT2B,UAES,EAAAvB,gBAAA,CADJC,KAAA,CAAAC,QAAQ,iD,kCA7BrBsB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}