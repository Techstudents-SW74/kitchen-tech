{"ast":null,"code":"import { tablesService } from \"@/public/services/tablesService\";\nimport { accountService } from \"@/public/services/accountsService\";\nexport default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      accountName: \"\",\n      tableNumber: \"\",\n      manualAccountName: \"\",\n      tableId: null\n    };\n  },\n  watch: {\n    tableNumber(newVal) {\n      if (!this.manualAccountName) {\n        this.accountName = `Mesa: ${newVal}`;\n      }\n    }\n  },\n  methods: {\n    handleAccountNameInput(event) {\n      const prefix = `Mesa: ${this.tableNumber}`;\n      this.manualAccountName = event.target.value.startsWith(prefix) ? event.target.value.slice(prefix.length).trimStart() : event.target.value;\n      this.accountName = `${prefix} ${this.manualAccountName}`;\n    },\n    async save() {\n      if (this.accountName || this.tableNumber) {\n        try {\n          const tables = await tablesService.getTablesByRestaurant(this.restaurantId);\n          const table = tables.find(t => t.tableNumber == this.tableNumber);\n          if (table) {\n            this.tableId = table.id;\n            const accountPayload = {\n              accountName: this.accountName || `Mesa: ${this.tableNumber}`,\n              table: {\n                id: table.id\n              },\n              restaurantId: this.restaurantId,\n              state: 0,\n              totalAccount: 0,\n              products: []\n            };\n            await accountService.addAccount(accountPayload);\n            this.$emit(\"save-sale\", accountPayload);\n            this.closeModal();\n          } else {\n            alert(\"Table not found\");\n          }\n        } catch (error) {\n          console.error(\"Error saving account:\", error);\n        }\n      } else {\n        alert(\"Please, complete one input at least\");\n      }\n    },\n    closeModal() {\n      this.accountName = undefined;\n      this.tableNumber = undefined;\n      this.$emit(\"close-modal\");\n    }\n  }\n};","map":{"version":3,"names":["tablesService","accountService","props","isVisible","type","Boolean","default","data","accountName","tableNumber","manualAccountName","tableId","watch","newVal","methods","handleAccountNameInput","event","prefix","target","value","startsWith","slice","length","trimStart","save","tables","getTablesByRestaurant","restaurantId","table","find","t","id","accountPayload","state","totalAccount","products","addAccount","$emit","closeModal","alert","error","console","undefined"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\cassing-views\\components\\save-order-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <p class=\"title\">Save Order</p>\r\n        <button class=\"close\" @click=\"closeModal()\">x</button>\r\n      </div>\r\n      <form @submit.prevent=\"save\">\r\n        <div class=\"form-inputs\">\r\n          <div class=\"form-group account-name\">\r\n            <label for=\"accountName\">Account Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"accountName\"\r\n                v-model=\"accountName\"\r\n                @input=\"handleAccountNameInput\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group table-number\">\r\n            <label for=\"tableNumber\">Mesa</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"tableNumber\"\r\n                v-model=\"tableNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"save-button\">Save Order</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {tablesService} from \"@/public/services/tablesService\";\r\nimport {accountService} from \"@/public/services/accountsService\";\r\n\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      accountName: \"\",\r\n      tableNumber: \"\",\r\n      manualAccountName:\"\",\r\n      tableId: null,\r\n    };\r\n  },\r\n  watch: {\r\n    tableNumber(newVal){\r\n      if(!this.manualAccountName){\r\n        this.accountName = `Mesa: ${newVal}`;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    handleAccountNameInput(event) {\r\n      const prefix = `Mesa: ${this.tableNumber}`;\r\n      this.manualAccountName = event.target.value.startsWith(prefix)\r\n      ? event.target.value.slice(prefix.length).trimStart()\r\n          : event.target.value;\r\n\r\n      this.accountName = `${prefix} ${this.manualAccountName}`;\r\n    },\r\n    async save() {\r\n      if (this.accountName || this.tableNumber) {\r\n        try {\r\n          const tables = await tablesService.getTablesByRestaurant(this.restaurantId);\r\n          const table = tables.find(t => t.tableNumber == this.tableNumber);\r\n\r\n          if(table) {\r\n            this.tableId = table.id;\r\n            const accountPayload = {\r\n              accountName: this.accountName || `Mesa: ${this.tableNumber}`,\r\n              table: {id: table.id},\r\n              restaurantId: this.restaurantId,\r\n              state: 0,\r\n              totalAccount: 0,\r\n              products: [],\r\n            };\r\n\r\n            await accountService.addAccount(accountPayload);\r\n            this.$emit(\"save-sale\", accountPayload);\r\n            this.closeModal();\r\n          } else {\r\n            alert(\"Table not found\")\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error saving account:\", error);\r\n        }\r\n      } else {\r\n        alert(\"Please, complete one input at least\")\r\n      }\r\n    },\r\n    closeModal(){\r\n      this.accountName = undefined;\r\n      this.tableNumber = undefined;\r\n      this.$emit(\"close-modal\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: #F6F5FA;\r\n  color: #31304A;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  width: 550px;\r\n  max-width: 100%;\r\n}\r\n.modal-header{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.close{\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #31304A;\r\n  font-weight: 800;\r\n  padding: 0;\r\n  margin: 0;\r\n  align-self: flex-start;\r\n}\r\n\r\n.title{\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  margin: 0 0 15px 0;\r\n}\r\n.form-inputs{\r\n  display: flex;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n.account-name{\r\n  width: 410px;\r\n}\r\n.table-number{\r\n  margin-left: 24px;\r\n  max-width: 100px;\r\n}\r\n\r\nlabel{\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #D3D2E5;\r\n}\r\n.save-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n.save-button:active{\r\n  background-color: #201E35;\r\n}\r\n</style>"],"mappings":"AAkCA,SAAQA,aAAa,QAAO,iCAAiC;AAC7D,SAAQC,cAAc,QAAO,mCAAmC;AAEhE,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,iBAAiB,EAAC,EAAE;MACpBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLH,WAAWA,CAACI,MAAM,EAAC;MACjB,IAAG,CAAC,IAAI,CAACH,iBAAiB,EAAC;QACzB,IAAI,CAACF,WAAU,GAAI,SAASK,MAAM,EAAE;MACtC;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,sBAAsBA,CAACC,KAAK,EAAE;MAC5B,MAAMC,MAAK,GAAI,SAAS,IAAI,CAACR,WAAW,EAAE;MAC1C,IAAI,CAACC,iBAAgB,GAAIM,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,UAAU,CAACH,MAAM,IAC3DD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACE,KAAK,CAACJ,MAAM,CAACK,MAAM,CAAC,CAACC,SAAS,CAAC,IAC9CP,KAAK,CAACE,MAAM,CAACC,KAAK;MAExB,IAAI,CAACX,WAAU,GAAI,GAAGS,MAAM,IAAI,IAAI,CAACP,iBAAiB,EAAE;IAC1D,CAAC;IACD,MAAMc,IAAIA,CAAA,EAAG;MACX,IAAI,IAAI,CAAChB,WAAU,IAAK,IAAI,CAACC,WAAW,EAAE;QACxC,IAAI;UACF,MAAMgB,MAAK,GAAI,MAAMzB,aAAa,CAAC0B,qBAAqB,CAAC,IAAI,CAACC,YAAY,CAAC;UAC3E,MAAMC,KAAI,GAAIH,MAAM,CAACI,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACrB,WAAU,IAAK,IAAI,CAACA,WAAW,CAAC;UAEjE,IAAGmB,KAAK,EAAE;YACR,IAAI,CAACjB,OAAM,GAAIiB,KAAK,CAACG,EAAE;YACvB,MAAMC,cAAa,GAAI;cACrBxB,WAAW,EAAE,IAAI,CAACA,WAAU,IAAK,SAAS,IAAI,CAACC,WAAW,EAAE;cAC5DmB,KAAK,EAAE;gBAACG,EAAE,EAAEH,KAAK,CAACG;cAAE,CAAC;cACrBJ,YAAY,EAAE,IAAI,CAACA,YAAY;cAC/BM,KAAK,EAAE,CAAC;cACRC,YAAY,EAAE,CAAC;cACfC,QAAQ,EAAE;YACZ,CAAC;YAED,MAAMlC,cAAc,CAACmC,UAAU,CAACJ,cAAc,CAAC;YAC/C,IAAI,CAACK,KAAK,CAAC,WAAW,EAAEL,cAAc,CAAC;YACvC,IAAI,CAACM,UAAU,CAAC,CAAC;UACnB,OAAO;YACLC,KAAK,CAAC,iBAAiB;UACzB;QACF,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF,OAAO;QACLD,KAAK,CAAC,qCAAqC;MAC7C;IACF,CAAC;IACDD,UAAUA,CAAA,EAAE;MACV,IAAI,CAAC9B,WAAU,GAAIkC,SAAS;MAC5B,IAAI,CAACjC,WAAU,GAAIiC,SAAS;MAC5B,IAAI,CAACL,KAAK,CAAC,aAAa,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}