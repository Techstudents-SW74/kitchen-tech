{"ast":null,"code":"import axiosInstance from \"./axiosConfig\";\nconst API_URL = '/account';\nconst getAuthToken = () => {\n  return localStorage.getItem('token'); // Obtiene el token del localStorage\n};\nexport const accountService = {\n  async getAccountsByRestaurant(restaurantId) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching accounts:', error.response ? error.response.data : error.message);\n    }\n  },\n  async addAccount(account) {\n    try {\n      const token = getAuthToken();\n      // Verifica si clientId existe, de lo contrario asigna null\n      const payload = {\n        accountName: account.accountName,\n        client: account.clientId || null,\n        table: account.table || null,\n        restaurantId: account.restaurantId,\n        state: account.state,\n        totalAccount: account.totalAccount,\n        dateCreated: new Date().toISOString(),\n        dateLog: new Date().toISOString(),\n        products: account.products || [] // Lista de productos que puede estar vacía o con valores\n      };\n      console.log(\"Payload a enviar:\", payload); // Verifica la estructura de datos\n\n      const response = await axiosInstance.post(`${API_URL}`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding account:', error.response ? error.response.data : error.message);\n    }\n  },\n  async addAccountProduct(accountProduct) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.post(`${API_URL}/${accountProduct.accountId}/products`, {\n        productId: accountProduct.productId,\n        quantity: accountProduct.quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding products to account:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  },\n  async deleteAccount(accountId) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.delete(`${API_URL}/${accountId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\n        }\n      });\n      return response.data; // Retorna los datos de la respuesta\n    } catch (error) {\n      console.error('Error deleting product:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","API_URL","getAuthToken","localStorage","getItem","accountService","getAccountsByRestaurant","restaurantId","token","response","get","headers","Authorization","data","error","console","message","addAccount","account","payload","accountName","client","clientId","table","state","totalAccount","dateCreated","Date","toISOString","dateLog","products","log","post","addAccountProduct","accountProduct","accountId","productId","quantity","deleteAccount","delete"],"sources":["C:/Users/W10/Desktop/BodegaTrack/kitchen-tech/src/public/services/accountsService.js"],"sourcesContent":["import axiosInstance from \"./axiosConfig\";\r\n\r\nconst API_URL = '/account';\r\n\r\nconst getAuthToken = () => {\r\n    return localStorage.getItem('token'); // Obtiene el token del localStorage\r\n};\r\n\r\nexport const accountService = {\r\n    async getAccountsByRestaurant(restaurantId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\r\n                }\r\n            });\r\n            return response.data;\r\n        }catch (error) {\r\n            console.error('Error fetching accounts:', error.response ? error.response.data : error.message);\r\n        }\r\n    },\r\n    async addAccount(account) {\r\n        try {\r\n            const token = getAuthToken();\r\n            // Verifica si clientId existe, de lo contrario asigna null\r\n            const payload = {\r\n                accountName: account.accountName,\r\n                client: account.clientId || null,\r\n                table: account.table || null,\r\n                restaurantId: account.restaurantId,\r\n                state: account.state,\r\n                totalAccount: account.totalAccount,\r\n                dateCreated: new Date().toISOString(),\r\n                dateLog: new Date().toISOString(),\r\n                products: account.products || []  // Lista de productos que puede estar vacía o con valores\r\n            };\r\n\r\n            console.log(\"Payload a enviar:\", payload); // Verifica la estructura de datos\r\n\r\n            const response = await axiosInstance.post(`${API_URL}`, payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error adding account:', error.response ? error.response.data : error.message);\r\n        }\r\n    },\r\n    async addAccountProduct(accountProduct) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.post(`${API_URL}/${accountProduct.accountId}/products`,\r\n                {\r\n                    productId: accountProduct.productId,\r\n                    quantity: accountProduct.quantity\r\n                },\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error adding products to account:', error.response ? error.response.data : error.message);\r\n            throw error;\r\n        }\r\n    },\r\n    async deleteAccount(accountId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.delete(`${API_URL}/${accountId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\r\n                }\r\n            });\r\n            return response.data; // Retorna los datos de la respuesta\r\n        } catch (error) {\r\n            console.error('Error deleting product:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    },\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}