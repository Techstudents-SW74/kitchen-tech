{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { accountService } from \"@/public/services/accountsService\";\nexport default {\n  props: {\n    restaurantName: {\n      type: String,\n      required: true\n    },\n    userRole: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      accounts: [],\n      filteredAccounts: [],\n      activeMode: 'accounts'\n    };\n  },\n  mounted() {\n    this.activeMode = this.$route.path.includes(\"tables\") ? 'tables' : 'accounts';\n    if (this.restaurantName) {\n      this.loadAccounts();\n    } else {\n      console.error('Restaurant name is required');\n    }\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  },\n  methods: {\n    async loadAccounts() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const restaurantId = userData.restaurantId;\n      try {\n        const accounts = await accountService.getAccountsByRestaurant(restaurantId);\n        this.accounts = accounts;\n        this.filteredProducts = this.accounts;\n      } catch (error) {\n        console.error(\"Failed to load products\", error);\n      }\n    },\n    filterAccounts() {\n      const query = this.searchQuery.toLowerCase();\n      this.filteredAccounts = this.accounts.filter(account => account.accountName.toLowerCase().includes(query));\n\n      // Verifica si no hay coincidencias\n      if (this.filteredAccounts.length === 0) {\n        this.filteredAccounts = -1; // Si quieres usar -1 para indicar que no hay resultados\n      }\n    },\n    handleClickOutside(event) {\n      if (!this.$el.contains(event.target)) {\n        this.filteredAccounts = 0;\n      }\n    },\n    onSearchFocus() {\n      if (this.searchQuery) {\n        this.filterAccounts();\n      }\n    },\n    async toggleTablesMode() {\n      await this.$router.push(`/${this.restaurantName}/${this.userRole}/tables`);\n    },\n    async toggleAccountsMode() {\n      await this.$router.push(`/${this.restaurantName}/${this.userRole}/saved-accounts`);\n    }\n  }\n};","map":{"version":3,"names":["accountService","props","restaurantName","type","String","required","userRole","data","searchQuery","accounts","filteredAccounts","activeMode","mounted","$route","path","includes","loadAccounts","console","error","document","addEventListener","handleClickOutside","beforeUnmount","removeEventListener","methods","userData","JSON","parse","localStorage","getItem","restaurantId","getAccountsByRestaurant","filteredProducts","filterAccounts","query","toLowerCase","filter","account","accountName","length","event","$el","contains","target","onSearchFocus","toggleTablesMode","$router","push","toggleAccountsMode"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\saved-accounts-views\\components\\searchbar-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"products-header\">\r\n    <input\r\n        class=\"search-bar\"\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search accounts...\"\r\n        @input=\"filterAccounts\"\r\n        @focus=\"onSearchFocus\"\r\n    />\r\n    <ul v-if=\"filteredAccounts.length && searchQuery\" class=\"dropdown\">\r\n      <li v-for=\"account in filteredAccounts\" :key=\"account.id\" class=\"account-card\" @click=\"$emit('view-account')\">\r\n        <div class=\"card-content\">\r\n          <span class=\"account-name\">{{ account.accountName }}</span>\r\n          <span class=\"account-client\">{{ account.client }}</span>\r\n        </div>\r\n        <span class=\"total-account\">S/.{{ account.totalAccount }}</span>\r\n      </li>\r\n    </ul>\r\n    <ul v-else-if=\"filteredAccounts === -1 && searchQuery\" class=\"dropdown\">\r\n      <li class=\"account-card\">\r\n        <div class=\"card-content\">\r\n          <span>No account matches the query.</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button :class=\"{ 'active-button': activeMode === 'tables' }\" @click=\"toggleTablesMode\">Tables</button>\r\n    <button :class=\"{ 'active-button': activeMode === 'accounts' }\" @click=\"toggleAccountsMode\">Accounts</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {accountService} from \"@/public/services/accountsService\";\r\n\r\nexport default {\r\n  props: {\r\n    restaurantName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    userRole: {\r\n      type: String,\r\n      required: true,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      accounts: [],\r\n      filteredAccounts: [],\r\n      activeMode: 'accounts',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.activeMode = this.$route.path.includes(\"tables\") ? 'tables' : 'accounts';\r\n\r\n    if(this.restaurantName) {\r\n      this.loadAccounts();\r\n    } else {\r\n      console.error('Restaurant name is required');\r\n    }\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  },\r\n  methods: {\r\n    async loadAccounts() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const restaurantId = userData.restaurantId;\r\n\r\n      try {\r\n        const accounts = await accountService.getAccountsByRestaurant(restaurantId);\r\n        this.accounts = accounts;\r\n        this.filteredProducts = this.accounts;\r\n      } catch (error) {\r\n        console.error(\"Failed to load products\", error);\r\n      }\r\n    },\r\n    filterAccounts() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      this.filteredAccounts = this.accounts.filter((account) =>\r\n          account.accountName.toLowerCase().includes(query)\r\n      );\r\n\r\n      // Verifica si no hay coincidencias\r\n      if (this.filteredAccounts.length === 0) {\r\n        this.filteredAccounts = -1; // Si quieres usar -1 para indicar que no hay resultados\r\n      }\r\n    },\r\n    handleClickOutside(event) {\r\n      if (!this.$el.contains(event.target)) {\r\n        this.filteredAccounts = 0;\r\n      }\r\n    },\r\n    onSearchFocus() {\r\n      if (this.searchQuery) {\r\n        this.filterAccounts();\r\n      }\r\n    },\r\n    async toggleTablesMode() {\r\n      await this.$router.push(`/${this.restaurantName}/${this.userRole}/tables`)\r\n    },\r\n    async toggleAccountsMode() {\r\n      await this.$router.push(`/${this.restaurantName}/${this.userRole}/saved-accounts`);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.products-header {\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  max-width: 1000px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 10px;\r\n  gap: 10px;\r\n}\r\n.search-bar {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #31304A;\r\n  background-color: #D3D2E5;\r\n}\r\n.dropdown{\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #D3D2E5;\r\n  border: 1px solid #31304A;\r\n  border-radius: 5px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  z-index: 10;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-width: 705px;\r\n}\r\n.dropdown li {\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.dropdown button {\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.total-account{\r\n  font-size: 0.7rem;\r\n}\r\n.account-card{\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-bottom: 1px solid #F6F5FA;\r\n}\r\n.account-card:last-child{\r\n  border-bottom: none;\r\n}\r\n.card-content{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  font-family: 'Red-hat-display', sans-serif;\r\n}\r\n.account-name {\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n}\r\nbutton{\r\n  padding: 13px 20px;\r\n  background: #D3D2E5;\r\n  color: #31304A;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-weight: 800;\r\n  flex-shrink: 0;\r\n  width: 120px;\r\n}\r\nbutton:hover {\r\n  background-color: #31304A;\r\n  color: #F6F5FA;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n}\r\nbutton:active{\r\n  background-color: #201E35;\r\n  color: #F6F5FA;\r\n}\r\n.active-button {\r\n  color: #F6F5FA;\r\n  background: #31304A;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}