{"ast":null,"code":"import { accountService } from \"@/public/services/accountsService\";\nexport default {\n  props: {\n    restaurantName: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      accounts: [],\n      filteredAccounts: []\n    };\n  },\n  beforeMount() {\n    if (this.restaurantName) {\n      this.loadAccounts();\n    } else {\n      console.error('Restaurant name is required');\n    }\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  },\n  methods: {\n    async loadAccounts() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const restaurantId = userData.restaurantId;\n      try {\n        const accounts = await accountService.getAccountsByRestaurant(restaurantId);\n        this.accounts = accounts;\n        this.filteredProducts = this.accounts;\n      } catch (error) {\n        console.error(\"Failed to load products\", error);\n      }\n    },\n    filterAccounts() {\n      try {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredAccounts = this.accounts.filter(account => account.accountName.toLowerCase().includes(query));\n      } catch (error) {\n        console.log(\"There are not accounts to show\");\n      }\n    },\n    handleClickOutside(event) {\n      if (!this.$el.contains(event.target)) {\n        this.filteredAccounts = [];\n      }\n    },\n    onSearchFocus() {\n      if (this.searchQuery) {\n        this.filterAccounts();\n      }\n    },\n    toggleTablesMode() {\n      this.$emit('toggle-tables-mode');\n    },\n    toggleAccountsMode() {\n      this.$emit('toggle-accounts-mode');\n    }\n  }\n};","map":{"version":3,"names":["accountService","props","restaurantName","type","String","required","data","searchQuery","accounts","filteredAccounts","beforeMount","loadAccounts","console","error","document","addEventListener","handleClickOutside","beforeUnmount","removeEventListener","methods","userData","JSON","parse","localStorage","getItem","restaurantId","getAccountsByRestaurant","filteredProducts","filterAccounts","query","toLowerCase","filter","account","accountName","includes","log","event","$el","contains","target","onSearchFocus","toggleTablesMode","$emit","toggleAccountsMode"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\saved-accounts-views\\components\\searchbar-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"products-header\">\r\n    <input\r\n        class=\"search-bar\"\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search accounts...\"\r\n        @input=\"filterAccounts\"\r\n        @focus=\"onSearchFocus\"\r\n    />\r\n    <ul v-if=\"filteredAccounts.length && searchQuery\" class=\"dropdown\">\r\n      <li v-for=\"account in filteredAccounts\" :key=\"account.id\" class=\"account-card\" @click=\"$emit('view-account')\">\r\n        <div class=\"card-content\">\r\n          <span class=\"account-name\">{{ account.accountName }}</span>\r\n          <span class=\"account-client\">{{ account.client }}</span>\r\n        </div>\r\n        <span class=\"total-account\">S/.{{ account.totalAccount }}</span>\r\n      </li>\r\n    </ul>\r\n    <ul v-else-if=\"accounts.length === 0 && searchQuery\" class=\"dropdown\">\r\n      <li class=\"account-card\">\r\n        <div class=\"card-content\">\r\n          <div class=\"no-products\">\r\n            <label>You don't have created any product yet.</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button class=\"table-button\" @click=\"toggleTablesMode\">Show tables</button>\r\n    <button class=\"account-button\" @click=\"toggleAccountsMode\">Show Account</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {accountService} from \"@/public/services/accountsService\";\r\n\r\nexport default {\r\n  props: {\r\n    restaurantName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      accounts: [],\r\n      filteredAccounts: [],\r\n    };\r\n  },\r\n  beforeMount() {\r\n    if(this.restaurantName) {\r\n      this.loadAccounts();\r\n    } else {\r\n      console.error('Restaurant name is required');\r\n    }\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  },\r\n  methods: {\r\n    async loadAccounts() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const restaurantId = userData.restaurantId;\r\n\r\n      try {\r\n        const accounts = await accountService.getAccountsByRestaurant(restaurantId);\r\n        this.accounts = accounts;\r\n        this.filteredProducts = this.accounts;\r\n      } catch (error) {\r\n        console.error(\"Failed to load products\", error);\r\n      }\r\n    },\r\n    filterAccounts() {\r\n      try{\r\n        const query = this.searchQuery.toLowerCase();\r\n        this.filteredAccounts = this.accounts.filter((account) =>\r\n            account.accountName.toLowerCase().includes(query)\r\n        );\r\n      } catch (error){\r\n        console.log(\"There are not accounts to show\")\r\n      }\r\n    },\r\n    handleClickOutside(event) {\r\n      if (!this.$el.contains(event.target)) {\r\n        this.filteredAccounts = [];\r\n      }\r\n    },\r\n    onSearchFocus() {\r\n      if (this.searchQuery) {\r\n        this.filterAccounts();\r\n      }\r\n    },\r\n    toggleTablesMode() {\r\n      this.$emit('toggle-tables-mode');\r\n    },\r\n    toggleAccountsMode() {\r\n      this.$emit('toggle-accounts-mode');\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.products-header {\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  max-width: 1000px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 10px;\r\n  gap: 10px;\r\n}\r\n.search-bar {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #31304A;\r\n  background-color: #D3D2E5;\r\n}\r\n.dropdown{\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #D3D2E5;\r\n  border: 1px solid #31304A;\r\n  border-radius: 5px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  z-index: 10;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-width: 705px;\r\n}\r\n.dropdown li {\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.dropdown button {\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.account-card{\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-bottom: 1px solid #F6F5FA;\r\n}\r\n.account-card:last-child{\r\n  border-bottom: none;\r\n}\r\n.card-content{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  font-family: 'Red-hat-display', sans-serif;\r\n}\r\n.account-name {\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n}\r\nbutton{\r\n  padding: 13px 20px;\r\n  background: #D3D2E5;\r\n  color: #31304A;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-weight: 800;\r\n  flex-shrink: 0;\r\n}\r\n</style>"],"mappings":"AAkCA,SAAQA,cAAc,QAAO,mCAAmC;AAEhE,eAAe;EACbC,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAG,IAAI,CAACR,cAAc,EAAE;MACtB,IAAI,CAACS,YAAY,CAAC,CAAC;IACrB,OAAO;MACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC9C;IACAC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,kBAAkB,CAAC;EAC7D,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,QAAQ,CAACI,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACF,kBAAkB,CAAC;EAChE,CAAC;EACDG,OAAO,EAAE;IACP,MAAMR,YAAYA,CAAA,EAAG;MACnB,MAAMS,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7D,MAAMC,YAAW,GAAIL,QAAQ,CAACK,YAAY;MAE1C,IAAI;QACF,MAAMjB,QAAO,GAAI,MAAMR,cAAc,CAAC0B,uBAAuB,CAACD,YAAY,CAAC;QAC3E,IAAI,CAACjB,QAAO,GAAIA,QAAQ;QACxB,IAAI,CAACmB,gBAAe,GAAI,IAAI,CAACnB,QAAQ;MACvC,EAAE,OAAOK,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDe,cAAcA,CAAA,EAAG;MACf,IAAG;QACD,MAAMC,KAAI,GAAI,IAAI,CAACtB,WAAW,CAACuB,WAAW,CAAC,CAAC;QAC5C,IAAI,CAACrB,gBAAe,GAAI,IAAI,CAACD,QAAQ,CAACuB,MAAM,CAAEC,OAAO,IACjDA,OAAO,CAACC,WAAW,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,CACpD,CAAC;MACH,EAAE,OAAOhB,KAAK,EAAC;QACbD,OAAO,CAACuB,GAAG,CAAC,gCAAgC;MAC9C;IACF,CAAC;IACDnB,kBAAkBA,CAACoB,KAAK,EAAE;MACxB,IAAI,CAAC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACpC,IAAI,CAAC9B,gBAAe,GAAI,EAAE;MAC5B;IACF,CAAC;IACD+B,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACjC,WAAW,EAAE;QACpB,IAAI,CAACqB,cAAc,CAAC,CAAC;MACvB;IACF,CAAC;IACDa,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAClC,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACpC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}