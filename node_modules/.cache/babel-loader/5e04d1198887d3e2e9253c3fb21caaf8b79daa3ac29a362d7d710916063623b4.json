{"ast":null,"code":"import HeaderComponent from \"@/admins/components/header-component.vue\";\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\nimport restaurantService from \"@/public/services/userService\";\nimport userService from \"@/public/services/userService\";\nexport default {\n  components: {\n    HeaderComponent,\n    SidebarComponent\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      waiter: {\n        username: '',\n        name: '',\n        lastname: '',\n        email: '',\n        phone: '',\n        password: '',\n        confirmPassword: ''\n      },\n      touched: {\n        username: '',\n        name: '',\n        lastname: '',\n        email: '',\n        phone: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  computed: {\n    usernameError() {\n      if (!this.username) return \"This field is mandatory\";\n      if (/\\s/.test(this.username)) return \"Username must not have blank spaces\";\n      if (!/^[a-zA-Z0-9]+$/.test(this.username)) return \"The username must not have special characters\";\n      return null;\n    },\n    emailError() {\n      if (!this.email) return \"This field is mandatory\";\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.email)) return \"Email not valid\";\n      return null;\n    },\n    phoneError() {\n      if (!this.phone) return \"This field is mandatory\";\n      if (!/^\\d{9}$/.test(this.phone)) return \"Phone number not valid\";\n      return null;\n    },\n    passwordError() {\n      if (!this.password) return \"This field is mandatory\";\n      if (this.password.length < 6) return \"Password must have 6 characters at least\";\n      if (!/[a-z]/.test(this.password)) return \"Must contain 1 lowercase at least\";\n      if (!/[A-Z]/.test(this.password)) return \"Must contain 1 uppercase at least\";\n      if (!/[!@#$%^&*]/.test(this.password)) return \"Must contain 1 special character at least\";\n      return null;\n    },\n    confirmPasswordError() {\n      if (!this.confirmPassword) return \"This field is mandatory\";\n      if (this.confirmPassword !== this.password) return \"Passwords don't match\";\n      return null;\n    }\n  },\n  mounted() {\n    this.fetchUserData();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          const restaurantData = await userService.getRestaurantById(restaurantId);\n          this.restaurantName = restaurantData.name;\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    togglePasswordVisibility() {\n      this.passwordVisible = !this.passwordVisible;\n    },\n    toggleConfirmPasswordVisibility() {\n      this.confirmPasswordVisible = !this.confirmPasswordVisible;\n    },\n    async addWaiter() {\n      try {\n        await restaurantService.addWaiterToRestaurant(this.restaurantName, this.waiter);\n        alert(\"Waiter added successfully!\");\n        this.waiter = {\n          name: '',\n          lastname: '',\n          email: '',\n          phone: '',\n          password: ''\n        };\n      } catch (error) {\n        console.error(\"Error adding waiter:\", error);\n        alert(\"There was an error adding the waiter.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["HeaderComponent","SidebarComponent","restaurantService","userService","components","data","restaurantName","userRole","waiter","username","name","lastname","email","phone","password","confirmPassword","touched","computed","usernameError","test","emailError","phoneError","passwordError","length","confirmPasswordError","mounted","fetchUserData","methods","userData","JSON","parse","localStorage","getItem","restaurantId","restaurantData","getRestaurantById","role","error","console","togglePasswordVisibility","passwordVisible","toggleConfirmPasswordVisibility","confirmPasswordVisible","addWaiter","addWaiterToRestaurant","alert"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\profile-views\\create-new-waiter-page.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <sidebar-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"sidebar\" />\r\n    <div class=\"main-content\">\r\n      <header-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"header\" />\r\n      <div class=\"page-container\">\r\n        <h1>Add New Waiter</h1>\r\n        <div class=\"content-split\">\r\n          <!-- Sección izquierda: Formulario -->\r\n          <div class=\"form-container\">\r\n            <form @submit.prevent=\"addWaiter\" class=\"form\">\r\n              <div class=\"form-row\">\r\n                <div class=\"form-field\">\r\n                  <label for=\"username\">Username</label>\r\n                  <input type=\"text\" id=\"username\" v-model=\"waiter.username\" @blur=\"touched.username = true\" placeholder=\"Ex. adminLaRomana\" required />\r\n                  <span v-if=\"touched.username && usernameError\" class=\"error\">{{ usernameError }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"form-field\">\r\n                  <label for=\"name\">Name</label>\r\n                  <input type=\"text\" id=\"name\" v-model=\"name\" @blur=\"touched.name = true\" placeholder=\"Ex. Nicolás\" required />\r\n                  <span v-if=\"touched.name && !name\" class=\"error\">This field is mandatory</span>\r\n                </div>\r\n                <div class=\"form-field\">\r\n                  <label for=\"name\">Lastname</label>\r\n                  <input type=\"text\" id=\"lastname\" v-model=\"waiter.lastname\" @blur=\"touched.lastname = true\" placeholder=\"Zagal\" required />\r\n                  <span v-if=\"touched.lastname && !waiter.lastname\" class=\"error\">This field is mandatory</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"form-field\">\r\n                  <label for=\"email\">Email</label>\r\n                  <input type=\"email\" id=\"email\" v-model=\"waiter.email\" @blur=\"touched.email = true\" placeholder=\"Ex. email@example.com\" required />\r\n                  <span v-if=\"touched.email && emailError\" class=\"error\">{{ emailError }}</span>\r\n                </div>\r\n                <div class=\"form-field\">\r\n                  <label for=\"phone\">Phone</label>\r\n                  <input type=\"tel\" id=\"phone\" v-model=\"waiter.phone\" @blur=\"touched.phone = true\" placeholder=\"Ex. 904688149\" required />\r\n                  <span v-if=\"touched.phone && phoneError\" class=\"error\">{{ phoneError }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"form-field\">\r\n                  <label for=\"password\">Password</label>\r\n                  <div class=\"password-wrapper\">\r\n                    <input :type=\"waiter.passwordVisible ? 'text' : 'password'\"\r\n                           id=\"password\"\r\n                           v-model=\"waiter.password\"\r\n                           @blur=\"touched.password = true\"\r\n                           placeholder=\"Create your password\"\r\n                           required />\r\n                    <img\r\n                        :src=\"waiter.passwordVisible ? require('/public/assets/images/show.png') : require('/public/assets/images/hide.png')\"\r\n                        @click=\"togglePasswordVisibility\"\r\n                        class=\"password-toggle\"\r\n                        alt=\"toggle visibility\"\r\n                    />\r\n                  </div>\r\n                  <span v-if=\"touched.password && passwordError\" class=\"error\">{{ passwordError }}</span>\r\n                </div>\r\n\r\n                <div class=\"form-field\">\r\n                  <label for=\"confirmPassword\">Confirm Password</label>\r\n                  <div class=\"password-wrapper\">\r\n                    <input :type=\"waiter.confirmPasswordVisible ? 'text' : 'password'\"\r\n                           id=\"confirmPassword\"\r\n                           v-model=\"waiter.confirmPassword\"\r\n                           @blur=\"touched.confirmPassword = true\"\r\n                           placeholder=\"Confirm your password\"\r\n                           required />\r\n                    <img\r\n                        :src=\"waiter.confirmPasswordVisible ? require('/public/assets/images/show.png') : require('/public/assets/images/hide.png')\"\r\n                        @click=\"toggleConfirmPasswordVisibility\"\r\n                        class=\"password-toggle\"\r\n                        alt=\"toggle visibility\"\r\n                    />\r\n                  </div>\r\n                  <span v-if=\"touched.confirmPassword && confirmPasswordError\" class=\"error\">{{ confirmPasswordError }}</span>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" class=\"submit-button\">Add Waiter</button>\r\n            </form>\r\n          </div>\r\n          <!-- Sección derecha: Imagen -->\r\n          <div class=\"image-container\">\r\n            <img src=\"../../../../public/assets/images/create-waiter.svg\" alt=\"Waiter Illustration\" class=\"waiter-image\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\r\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\r\nimport restaurantService from \"@/public/services/userService\";\r\nimport userService from \"@/public/services/userService\";\r\n\r\nexport default {\r\n  components: {\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      waiter: {\r\n        username: '',\r\n        name: '',\r\n        lastname: '',\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      },\r\n      touched:{\r\n        username: '',\r\n        name: '',\r\n        lastname: '',\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    usernameError() {\r\n      if (!this.username) return \"This field is mandatory\";\r\n      if (/\\s/.test(this.username)) return \"Username must not have blank spaces\";\r\n      if (!/^[a-zA-Z0-9]+$/.test(this.username)) return \"The username must not have special characters\";\r\n      return null;\r\n    },\r\n    emailError() {\r\n      if (!this.email) return \"This field is mandatory\";\r\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.email)) return \"Email not valid\";\r\n      return null;\r\n    },\r\n    phoneError() {\r\n      if (!this.phone) return \"This field is mandatory\";\r\n      if (!/^\\d{9}$/.test(this.phone)) return \"Phone number not valid\";\r\n      return null;\r\n    },\r\n    passwordError() {\r\n      if (!this.password) return \"This field is mandatory\";\r\n      if (this.password.length < 6) return \"Password must have 6 characters at least\";\r\n      if (!/[a-z]/.test(this.password)) return \"Must contain 1 lowercase at least\";\r\n      if (!/[A-Z]/.test(this.password)) return \"Must contain 1 uppercase at least\";\r\n      if (!/[!@#$%^&*]/.test(this.password)) return \"Must contain 1 special character at least\";\r\n      return null;\r\n    },\r\n    confirmPasswordError() {\r\n      if (!this.confirmPassword) return \"This field is mandatory\";\r\n      if (this.confirmPassword !== this.password) return \"Passwords don't match\";\r\n      return null;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserData();\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          const restaurantData = await userService.getRestaurantById(restaurantId);\r\n          this.restaurantName = restaurantData.name;\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n\r\n    togglePasswordVisibility() {\r\n      this.passwordVisible = !this.passwordVisible;\r\n    },\r\n    toggleConfirmPasswordVisibility() {\r\n      this.confirmPasswordVisible = !this.confirmPasswordVisible;\r\n    },\r\n    async addWaiter() {\r\n      try {\r\n        await restaurantService.addWaiterToRestaurant(this.restaurantName, this.waiter);\r\n        alert(\"Waiter added successfully!\");\r\n        this.waiter = { name: '', lastname: '', email: '', phone: '', password: '' };\r\n      } catch (error) {\r\n        console.error(\"Error adding waiter:\", error);\r\n        alert(\"There was an error adding the waiter.\");\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.sidebar {\r\n  width: 280px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: #31304A;\r\n}\r\n\r\n.main-content {\r\n  margin-left: 280px;\r\n  width: calc(100% - 280px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 280px;\r\n  width: calc(100% - 280px);\r\n  background-color: #5E5E99;\r\n  z-index: 1;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.page-container {\r\n  font-family: 'Red-hat-display', sans-serif;\r\n  font-weight: 100;\r\n  margin-top: 100px;\r\n  padding: 20px;\r\n  background-color: #F6F5FA;\r\n  height: calc(100vh - 100px);\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-split {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-container {\r\n  flex: 1;\r\n}\r\n\r\n.image-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.waiter-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #5E5E99;\r\n  color: #fff;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #4b4a85;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}