{"ast":null,"code":"import { accountService } from \"@/public/services/accountsService\";\nexport default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    },\n    restaurantId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      accountName: \"\",\n      tableNumber: \"\",\n      manualAccountName: \"\",\n      isUpdate: false,\n      existingAccountData: null\n    };\n  },\n  watch: {\n    isVisible(newVal) {\n      if (newVal) {\n        this.loadExistingData();\n      }\n    },\n    tableNumber(newVal) {\n      if (!this.manualAccountName && !this.isUpdate) {\n        this.accountName = `Mesa: ${newVal}`;\n      }\n    }\n  },\n  methods: {\n    loadExistingData() {\n      const accountData = JSON.parse(localStorage.getItem('accountData'));\n      if (accountData) {\n        this.existingAccountData = accountData;\n        this.isUpdate = true;\n        this.accountName = accountData.accountName;\n        this.tableNumber = accountData.table?.tableNumber?.toString() || '';\n      } else {\n        this.isUpdate = false;\n        this.existingAccountData = null;\n      }\n    },\n    handleAccountNameInput(event) {\n      if (!this.isUpdate) {\n        const prefix = `Mesa: ${this.tableNumber}`;\n        this.manualAccountName = event.target.value.startsWith(prefix) ? event.target.value.slice(prefix.length).trimStart() : event.target.value;\n        this.accountName = `${prefix} ${this.manualAccountName}`;\n      }\n    },\n    async updateExistingAccount() {\n      try {\n        const cartData = JSON.parse(localStorage.getItem('cartData')) || [];\n\n        // Crear el payload completo incluyendo los productos\n        const accountUpdatePayload = {\n          ...this.existingAccountData,\n          accountName: this.accountName,\n          dateLog: new Date().toISOString(),\n          totalAccount: cartData.reduce((total, item) => total + item.price * item.quantity, 0),\n          // Incluir la lista completa de productos actualizada\n          products: cartData.map(product => ({\n            id: product.id,\n            quantity: product.quantity,\n            accountId: this.existingAccountData.id\n          }))\n        };\n\n        // Realizar una única llamada para actualizar la cuenta con todos sus productos\n        await accountService.updateAccount(accountUpdatePayload);\n        this.$emit('account-updated');\n        this.resetFields();\n        localStorage.removeItem('cartData');\n      } catch (error) {\n        console.error('Error updating account:', error);\n        alert('Error updating account. Please try again.');\n      }\n    },\n    async save() {\n      if (this.isUpdate) {\n        await this.updateExistingAccount();\n      } else {\n        this.$emit(\"save-sale\", this.accountName, this.tableNumber);\n      }\n      this.closeModal();\n    },\n    resetFields() {\n      this.accountName = \"\";\n      this.tableNumber = \"\";\n      this.manualAccountName = \"\";\n      this.isUpdate = false;\n      this.existingAccountData = null;\n    },\n    closeModal() {\n      this.resetFields();\n      this.$emit(\"close-modal\");\n    }\n  }\n};","map":{"version":3,"names":["accountService","props","isVisible","type","Boolean","default","restaurantId","String","required","data","accountName","tableNumber","manualAccountName","isUpdate","existingAccountData","watch","newVal","loadExistingData","methods","accountData","JSON","parse","localStorage","getItem","table","toString","handleAccountNameInput","event","prefix","target","value","startsWith","slice","length","trimStart","updateExistingAccount","cartData","accountUpdatePayload","dateLog","Date","toISOString","totalAccount","reduce","total","item","price","quantity","products","map","product","id","accountId","updateAccount","$emit","resetFields","removeItem","error","console","alert","save","closeModal"],"sources":["E:\\Kitchen Tech\\src\\admins\\views\\cassing-views\\components\\save-order-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <p class=\"title\">{{ isUpdate ? 'Update Order' : 'Save Order' }}</p>\r\n        <button class=\"close\" @click=\"closeModal()\">x</button>\r\n      </div>\r\n      <form @submit.prevent=\"save\">\r\n        <div class=\"form-inputs\">\r\n          <div class=\"form-group account-name\">\r\n            <label for=\"accountName\">Account Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"accountName\"\r\n                v-model=\"accountName\"\r\n                @input=\"handleAccountNameInput\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group table-number\">\r\n            <label for=\"tableNumber\">Mesa</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"tableNumber\"\r\n                v-model=\"tableNumber\"\r\n                :disabled=\"isUpdate\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"save-button\">\r\n          {{ isUpdate ? 'Update Order' : 'Save Order' }}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { accountService } from \"@/public/services/accountsService\";\r\n\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    restaurantId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      accountName: \"\",\r\n      tableNumber: \"\",\r\n      manualAccountName: \"\",\r\n      isUpdate: false,\r\n      existingAccountData: null\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    isVisible(newVal) {\r\n      if (newVal) {\r\n        this.loadExistingData();\r\n      }\r\n    },\r\n    tableNumber(newVal) {\r\n      if (!this.manualAccountName && !this.isUpdate) {\r\n        this.accountName = `Mesa: ${newVal}`;\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    loadExistingData() {\r\n      const accountData = JSON.parse(localStorage.getItem('accountData'));\r\n      if (accountData) {\r\n        this.existingAccountData = accountData;\r\n        this.isUpdate = true;\r\n        this.accountName = accountData.accountName;\r\n        this.tableNumber = accountData.table?.tableNumber?.toString() || '';\r\n      } else {\r\n        this.isUpdate = false;\r\n        this.existingAccountData = null;\r\n      }\r\n    },\r\n\r\n    handleAccountNameInput(event) {\r\n      if (!this.isUpdate) {\r\n        const prefix = `Mesa: ${this.tableNumber}`;\r\n        this.manualAccountName = event.target.value.startsWith(prefix)\r\n            ? event.target.value.slice(prefix.length).trimStart()\r\n            : event.target.value;\r\n\r\n        this.accountName = `${prefix} ${this.manualAccountName}`;\r\n      }\r\n    },\r\n\r\n    async updateExistingAccount() {\r\n      try {\r\n        const cartData = JSON.parse(localStorage.getItem('cartData')) || [];\r\n\r\n        // Crear el payload completo incluyendo los productos\r\n        const accountUpdatePayload = {\r\n          ...this.existingAccountData,\r\n          accountName: this.accountName,\r\n          dateLog: new Date().toISOString(),\r\n          totalAccount: cartData.reduce((total, item) => total + (item.price * item.quantity), 0),\r\n          // Incluir la lista completa de productos actualizada\r\n          products: cartData.map(product => ({\r\n            id: product.id,\r\n            quantity: product.quantity,\r\n            accountId: this.existingAccountData.id\r\n          }))\r\n        };\r\n\r\n        // Realizar una única llamada para actualizar la cuenta con todos sus productos\r\n        await accountService.updateAccount(accountUpdatePayload);\r\n\r\n        this.$emit('account-updated');\r\n        this.resetFields();\r\n        localStorage.removeItem('cartData');\r\n      } catch (error) {\r\n        console.error('Error updating account:', error);\r\n        alert('Error updating account. Please try again.');\r\n      }\r\n    },\r\n\r\n\r\n    async save() {\r\n      if (this.isUpdate) {\r\n        await this.updateExistingAccount();\r\n      } else {\r\n        this.$emit(\"save-sale\", this.accountName, this.tableNumber);\r\n      }\r\n      this.closeModal();\r\n    },\r\n\r\n    resetFields() {\r\n      this.accountName = \"\";\r\n      this.tableNumber = \"\";\r\n      this.manualAccountName = \"\";\r\n      this.isUpdate = false;\r\n      this.existingAccountData = null;\r\n    },\r\n\r\n    closeModal() {\r\n      this.resetFields();\r\n      this.$emit(\"close-modal\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: #F6F5FA;\r\n  color: #31304A;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  width: 550px;\r\n  max-width: 100%;\r\n}\r\n.modal-header{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.close{\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #31304A;\r\n  font-weight: 800;\r\n  padding: 0;\r\n  margin: 0;\r\n  align-self: flex-start;\r\n}\r\n\r\n.title{\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  margin: 0 0 15px 0;\r\n}\r\n.form-inputs{\r\n  display: flex;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n.account-name{\r\n  width: 410px;\r\n}\r\n.table-number{\r\n  margin-left: 24px;\r\n  max-width: 100px;\r\n}\r\n\r\nlabel{\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #D3D2E5;\r\n}\r\n.save-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n.save-button:active{\r\n  background-color: #201E35;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}