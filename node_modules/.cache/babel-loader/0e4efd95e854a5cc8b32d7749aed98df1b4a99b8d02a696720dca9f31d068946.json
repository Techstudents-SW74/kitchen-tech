{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nconst API_URL = 'http://localhost:3000/restaurants';\nexport const productsService = {\n  async getProductsByRestaurant(restaurantName) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(restaurant => restaurant['business-name'] === restaurantName);\n      if (restaurant) {\n        console.log(restaurant.products);\n        return restaurant.products || []; // Inicializa como arreglo si no existe\n      } else {\n        throw new Error('Restaurant not found');\n      }\n    } catch (error) {\n      console.error(\"Error fetching products: \", error);\n      throw error;\n    }\n  },\n  async addProduct(restaurantName, product) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const lastProduct = restaurant.products[restaurant.products.length - 1];\n        const newId = lastProduct ? lastProduct.id + 1 : 1;\n        product.id = newId;\n        restaurant.products.push(product);\n        await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n\n        // Devolver respuesta con éxito\n        return {\n          success: true,\n          message: \"Product created successfully\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error adding product: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  async updateProduct(restaurantName, product) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const index = restaurant.products.findIndex(p => p.id === product.id);\n        if (index !== -1) {\n          restaurant.products.splice(index, 1, product);\n          await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n\n          // Devolver respuesta con éxito\n          return {\n            success: true,\n            message: \"Product updated successfully\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Product not found\"\n          };\n        }\n      }\n    } catch (error) {\n      console.error(\"Error updating product: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  async deleteProduct(restaurantName, productId) {\n    try {\n      const response = await axios.get(API_URL);\n      const restaurant = response.data.find(r => r['business-name'] === restaurantName);\n      if (restaurant) {\n        const index = restaurant.products.findIndex(p => p.id === productId);\n        if (index !== -1) {\n          restaurant.products.splice(index, 1);\n          await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\n\n          // Devolver respuesta con éxito\n          return {\n            success: true,\n            message: \"Product deleted successfully\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Product not found\"\n          };\n        }\n      } else {\n        return {\n          success: false,\n          message: \"Restaurant not found\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error deleting product: \", error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","productsService","getProductsByRestaurant","restaurantName","response","get","restaurant","data","find","console","log","products","Error","error","addProduct","product","r","lastProduct","length","newId","id","push","put","success","message","updateProduct","index","findIndex","p","splice","deleteProduct","productId"],"sources":["E:/kitchen-tech-repo/src/public/services/productsService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = 'http://localhost:3000/restaurants';\r\n\r\nexport const productsService = {\r\n    async getProductsByRestaurant(restaurantName) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(restaurant => restaurant['business-name'] === restaurantName);\r\n            if (restaurant) {\r\n                console.log(restaurant.products);\r\n                return restaurant.products || [];  // Inicializa como arreglo si no existe\r\n            } else {\r\n                throw new Error('Restaurant not found');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching products: \", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async addProduct(restaurantName, product) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const lastProduct = restaurant.products[restaurant.products.length - 1];\r\n                const newId = lastProduct ? lastProduct.id + 1 : 1;\r\n                product.id = newId;\r\n\r\n                restaurant.products.push(product);\r\n                await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                // Devolver respuesta con éxito\r\n                return { success: true, message: \"Product created successfully\" };\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding product: \", error);\r\n            return { success: false, message: error.message };\r\n        }\r\n    },\r\n\r\n    async updateProduct(restaurantName, product) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const index = restaurant.products.findIndex(p => p.id === product.id);\r\n\r\n                if (index !== -1) {\r\n                    restaurant.products.splice(index, 1, product);\r\n                    await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                    // Devolver respuesta con éxito\r\n                    return { success: true, message: \"Product updated successfully\" };\r\n                } else {\r\n                    return { success: false, message: \"Product not found\" };\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating product: \", error);\r\n            return { success: false, message: error.message };\r\n        }\r\n    },\r\n\r\n    async deleteProduct(restaurantName, productId) {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            const restaurant = response.data.find(r => r['business-name'] === restaurantName);\r\n\r\n            if (restaurant) {\r\n                const index = restaurant.products.findIndex(p => p.id === productId);\r\n\r\n                if (index !== -1) {\r\n                    restaurant.products.splice(index, 1);\r\n                    await axios.put(`${API_URL}/${restaurant.id}`, restaurant);\r\n\r\n                    // Devolver respuesta con éxito\r\n                    return { success: true, message: \"Product deleted successfully\" };\r\n                } else {\r\n                    return { success: false, message: \"Product not found\" };\r\n                }\r\n            } else {\r\n                return { success: false, message: \"Restaurant not found\" };\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting product: \", error);\r\n            return { success: false, message: error.message };\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}