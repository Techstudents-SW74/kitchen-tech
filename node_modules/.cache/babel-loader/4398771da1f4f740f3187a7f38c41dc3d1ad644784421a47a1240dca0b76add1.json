{"ast":null,"code":"import axiosInstance from \"./axiosConfig\";\nconst API_URL = '/account';\nconst getAuthToken = () => {\n  return localStorage.getItem('token'); // Obtiene el token del localStorage\n};\nexport const accountService = {\n  async getAccountsByRestaurant(restaurantId) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching accounts:', error.response ? error.response.data : error.message);\n    }\n  },\n  async addAccount(account) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.post(`${API_URL}`, account, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding account:', error.response ? error.response.data : error.message);\n    }\n  },\n  async addAccountProduct(accountProduct) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.post(`${API_URL}/${accountProduct.accountId}/products`, {\n        productId: accountProduct.productId,\n        quantity: accountProduct.quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding products to account:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","API_URL","getAuthToken","localStorage","getItem","accountService","getAccountsByRestaurant","restaurantId","token","response","get","headers","Authorization","data","error","console","message","addAccount","account","post","addAccountProduct","accountProduct","accountId","productId","quantity"],"sources":["E:/kitchen-tech-repo/src/public/services/accountsService.js"],"sourcesContent":["import axiosInstance from \"./axiosConfig\";\r\n\r\nconst API_URL = '/account';\r\n\r\nconst getAuthToken = () => {\r\n    return localStorage.getItem('token'); // Obtiene el token del localStorage\r\n};\r\n\r\nexport const accountService = {\r\n    async getAccountsByRestaurant(restaurantId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\r\n                }\r\n            });\r\n            return response.data;\r\n        }catch (error) {\r\n            console.error('Error fetching accounts:', error.response ? error.response.data : error.message);\r\n        }\r\n    },\r\n    async addAccount(account) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.post(`${API_URL}`, account, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            return response.data;\r\n        } catch (error){\r\n            console.error('Error adding account:', error.response ? error.response.data : error.message);\r\n        }\r\n    },\r\n    async addAccountProduct(accountProduct) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.post(`${API_URL}/${accountProduct.accountId}/products`,\r\n                {\r\n                    productId: accountProduct.productId,\r\n                    quantity: accountProduct.quantity\r\n                },\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error adding products to account:', error.response ? error.response.data : error.message);\r\n            throw error;\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,eAAe;AAEzC,MAAMC,OAAO,GAAG,UAAU;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG;EAC1B,MAAMC,uBAAuBA,CAACC,YAAY,EAAE;IACxC,IAAI;MACA,MAAMC,KAAK,GAAGN,YAAY,CAAC,CAAC;MAC5B,MAAMO,QAAQ,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,GAAGT,OAAO,eAAeM,YAAY,EAAE,EAAE;QAC9EI,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUJ,KAAK,EAAE,CAAC;QACrC;MACJ,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACxB,CAAC,QAAOC,KAAK,EAAE;MACXC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACnG;EACJ,CAAC;EACD,MAAMC,UAAUA,CAACC,OAAO,EAAE;IACtB,IAAI;MACA,MAAMV,KAAK,GAAGN,YAAY,CAAC,CAAC;MAC5B,MAAMO,QAAQ,GAAG,MAAMT,aAAa,CAACmB,IAAI,CAAC,GAAGlB,OAAO,EAAE,EAAEiB,OAAO,EAAE;QAC7DP,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAChD,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAC;MACXC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAChG;EACJ,CAAC;EACD,MAAMI,iBAAiBA,CAACC,cAAc,EAAE;IACpC,IAAI;MACA,MAAMb,KAAK,GAAGN,YAAY,CAAC,CAAC;MAC5B,MAAMO,QAAQ,GAAG,MAAMT,aAAa,CAACmB,IAAI,CAAC,GAAGlB,OAAO,IAAIoB,cAAc,CAACC,SAAS,WAAW,EACvF;QACIC,SAAS,EAAEF,cAAc,CAACE,SAAS;QACnCC,QAAQ,EAAEH,cAAc,CAACG;MAC7B,CAAC,EACD;QACIb,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAChD,CAAC,CAAC;MACN,OAAOC,QAAQ,CAACI,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;MACxG,MAAMF,KAAK;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}