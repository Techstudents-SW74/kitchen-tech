{"ast":null,"code":"import userService from \"@/public/services/userService\";\nimport { tablesService } from \"@/public/services/tablesService\";\nexport default {\n  props: {\n    isVisible: Boolean\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      tableNumber: '',\n      tableCapacity: '',\n      isEdit: false\n    };\n  },\n  mounted() {\n    this.fetchUserData();\n    const userData = JSON.parse(localStorage.getItem('userData')); // Obtener los datos del usuario\n    const restaurantId = localStorage.getItem('restaurantId'); // Obtener el restaurantId\n    if (userData) {\n      this.restaurantName = userData['business-name']; // O lo que sea necesario\n      this.userRole = userData.role;\n    }\n    if (restaurantId) {\n      this.table.restaurantId = restaurantId;\n    }\n    if (this.$route.params.tableId) {\n      this.isEdit = true;\n      this.loadTable();\n    }\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          const restaurantData = await userService.getRestaurantById(restaurantId);\n          this.restaurantName = restaurantData.name;\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    async loadTable() {\n      try {\n        const tableId = this.$route.params.tableId; // Obtén el ID del producto desde los parámetros de la ruta\n        const table = await tablesService.getTableById(tableId); // Llama al endpoint para obtener el producto\n\n        if (table) {\n          this.table = {\n            id: table.id,\n            tableNumber: table.tableNumber,\n            tableCapacity: table.productPrice,\n            tableGuests: table.productImageUrl,\n            tableStatus: 0,\n            restaurantId: table.restaurantId\n          };\n        }\n      } catch (error) {\n        console.error(\"Failed to load product\", error);\n      }\n    },\n    async submitTable() {\n      if (this.tableNumber && this.tableCapacity) {\n        this.$emit(\"save-table\", {\n          tableNumber: this.tableNumber,\n          tableCapacity: this.tableCapacity\n        });\n      } else {\n        console.log(\"Error submitTable\");\n      }\n    },\n    closeModal() {\n      this.tableNumber = null;\n      this.tableCapacity = null;\n      this.$emit(\"close-modal\");\n    }\n  }\n};","map":{"version":3,"names":["userService","tablesService","props","isVisible","Boolean","data","restaurantName","userRole","tableNumber","tableCapacity","isEdit","mounted","fetchUserData","userData","JSON","parse","localStorage","getItem","restaurantId","role","table","$route","params","tableId","loadTable","methods","restaurantData","getRestaurantById","name","error","console","getTableById","id","productPrice","tableGuests","productImageUrl","tableStatus","submitTable","$emit","log","closeModal"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\saved-accounts-views\\components\\table-config-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <p class=\"title\">{{isEdit ? 'Edit Table' : 'Add New Table'}}</p>\r\n        <button class=\"close\" @click=\"closeModal()\">x</button>\r\n      </div>\r\n      <form @submit.prevent=\"submitTable\">\r\n        <div class=\"form-inputs\">\r\n          <div class=\"form-group table-number\">\r\n            <label for=\"tableNumber\">Table Number</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"tableNumber\"\r\n              v-model=\"table.number\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group table-capacity\">\r\n            <label for=\"tableCapacity\">Table Capacity</label>/\r\n            <input\r\n              type=\"number\"\r\n              id=\"tableCapacity\"\r\n              v-model=\"table.capacity\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"save-button\">{{ isEdit ? 'Save Changes' : 'Add Table' }}</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userService from \"@/public/services/userService\";\r\nimport {tablesService} from \"@/public/services/tablesService\";\r\n\r\nexport default {\r\n  props:{\r\n    isVisible:Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      tableNumber: '',\r\n      tableCapacity: '',\r\n      isEdit: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData();\r\n\r\n    const userData = JSON.parse(localStorage.getItem('userData')); // Obtener los datos del usuario\r\n    const restaurantId = localStorage.getItem('restaurantId'); // Obtener el restaurantId\r\n    if (userData) {\r\n      this.restaurantName = userData['business-name']; // O lo que sea necesario\r\n      this.userRole = userData.role;\r\n    }\r\n    if (restaurantId) {\r\n      this.table.restaurantId = restaurantId;\r\n    }\r\n\r\n    if (this.$route.params.tableId) {\r\n      this.isEdit = true;\r\n      this.loadTable();\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          const restaurantData = await userService.getRestaurantById(restaurantId);\r\n          this.restaurantName = restaurantData.name;\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n    async loadTable() {\r\n      try {\r\n        const tableId = this.$route.params.tableId; // Obtén el ID del producto desde los parámetros de la ruta\r\n        const table = await tablesService.getTableById(tableId); // Llama al endpoint para obtener el producto\r\n\r\n        if (table) {\r\n          this.table = {\r\n            id: table.id,\r\n            tableNumber: table.tableNumber,\r\n            tableCapacity: table.productPrice,\r\n            tableGuests: table.productImageUrl,\r\n            tableStatus: 0,\r\n            restaurantId: table.restaurantId,\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to load product\", error);\r\n      }\r\n    },\r\n    async submitTable() {\r\n      if (this.tableNumber && this.tableCapacity){\r\n        this.$emit(\"save-table\", {\r\n          tableNumber: this.tableNumber,\r\n          tableCapacity: this.tableCapacity,\r\n        });\r\n      } else {\r\n        console.log(\"Error submitTable\");\r\n      }\r\n    },\r\n    closeModal(){\r\n      this.tableNumber = null;\r\n      this.tableCapacity = null;\r\n      this.$emit(\"close-modal\");\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: #F6F5FA;\r\n  color: #31304A;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  width: 550px;\r\n  max-width: 100%;\r\n}\r\n.modal-header{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.close{\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #31304A;\r\n  font-weight: 800;\r\n  padding: 0;\r\n  margin: 0;\r\n  align-self: flex-start;\r\n}\r\n\r\n.title{\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  margin: 0 0 15px 0;\r\n}\r\n.form-inputs{\r\n  display: flex;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n.table-number{\r\n  width: 410px;\r\n}\r\n.table-capacity{\r\n  margin-left: 24px;\r\n  max-width: 100px;\r\n}\r\n\r\nlabel{\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #D3D2E5;\r\n}\r\n.save-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #31304A;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n.save-button:active{\r\n  background-color: #201E35;\r\n}\r\n</style>"],"mappings":"AAmCA,OAAOA,WAAU,MAAO,+BAA+B;AACvD,SAAQC,aAAa,QAAO,iCAAiC;AAE7D,eAAe;EACbC,KAAK,EAAC;IACJC,SAAS,EAACC;EACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IAEpB,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;IAC/D,MAAMC,YAAW,GAAIF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;IAC3D,IAAIJ,QAAQ,EAAE;MACZ,IAAI,CAACP,cAAa,GAAIO,QAAQ,CAAC,eAAe,CAAC,EAAE;MACjD,IAAI,CAACN,QAAO,GAAIM,QAAQ,CAACM,IAAI;IAC/B;IACA,IAAID,YAAY,EAAE;MAChB,IAAI,CAACE,KAAK,CAACF,YAAW,GAAIA,YAAY;IACxC;IAEA,IAAI,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,OAAO,EAAE;MAC9B,IAAI,CAACb,MAAK,GAAI,IAAI;MAClB,IAAI,CAACc,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMb,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAMC,YAAW,GAAIL,QAAQ,EAAEK,YAAY;QAE3C,IAAIA,YAAY,EAAE;UAChB,MAAMQ,cAAa,GAAI,MAAM1B,WAAW,CAAC2B,iBAAiB,CAACT,YAAY,CAAC;UACxE,IAAI,CAACZ,cAAa,GAAIoB,cAAc,CAACE,IAAI;UACzC,IAAI,CAACrB,QAAO,GAAIM,QAAQ,CAACM,IAAI;QAC/B;MACF,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IACD,MAAML,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMD,OAAM,GAAI,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,OAAO,EAAE;QAC5C,MAAMH,KAAI,GAAI,MAAMnB,aAAa,CAAC8B,YAAY,CAACR,OAAO,CAAC,EAAE;;QAEzD,IAAIH,KAAK,EAAE;UACT,IAAI,CAACA,KAAI,GAAI;YACXY,EAAE,EAAEZ,KAAK,CAACY,EAAE;YACZxB,WAAW,EAAEY,KAAK,CAACZ,WAAW;YAC9BC,aAAa,EAAEW,KAAK,CAACa,YAAY;YACjCC,WAAW,EAAEd,KAAK,CAACe,eAAe;YAClCC,WAAW,EAAE,CAAC;YACdlB,YAAY,EAAEE,KAAK,CAACF;UACtB,CAAC;QACH;MACF,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAMQ,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAAC7B,WAAU,IAAK,IAAI,CAACC,aAAa,EAAC;QACzC,IAAI,CAAC6B,KAAK,CAAC,YAAY,EAAE;UACvB9B,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,aAAa,EAAE,IAAI,CAACA;QACtB,CAAC,CAAC;MACJ,OAAO;QACLqB,OAAO,CAACS,GAAG,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC;IACDC,UAAUA,CAAA,EAAE;MACV,IAAI,CAAChC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,aAAY,GAAI,IAAI;MACzB,IAAI,CAAC6B,KAAK,CAAC,aAAa,CAAC;IAC3B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}