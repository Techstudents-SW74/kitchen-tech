{"ast":null,"code":"import axiosInstance from \"./axiosConfig\"; // Asegúrate de que la ruta sea correcta\n\nconst API_URL = '/product';\nconst getAuthToken = () => {\n  return localStorage.getItem('token'); // Obtiene el token del localStorage\n};\nexport const productsService = {\n  async getProductsByRestaurant(restaurantId) {\n    try {\n      const token = getAuthToken();\n      console.log(\"Token:\", token);\n      const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\n        }\n      });\n      return response.data; // Retorna los datos de los productos\n    } catch (error) {\n      console.error('Error fetching products:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  },\n  async deleteProduct(productId) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.delete(`${API_URL}/${productId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\n        }\n      });\n      return response.data; // Retorna los datos de la respuesta\n    } catch (error) {\n      console.error('Error deleting product:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  },\n  async updateProduct(product) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.put(`${API_URL}/${product.id}`, {\n        id: product.id,\n        productName: product.productName,\n        productPrice: product.productPrice,\n        productImageUrl: product.productImageUrl,\n        category: product.category,\n        restaurantId: product.restaurantId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token en el encabezado\n        }\n      });\n      return response.data; // Retorna los datos de la respuesta\n    } catch (error) {\n      console.error('Error updating product:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  },\n  async addProduct(product) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.post(`${API_URL}`, {\n        productName: product.productName,\n        productPrice: product.productPrice,\n        productImageUrl: product.productImageUrl,\n        category: product.category,\n        restaurantId: product.restaurantId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token en el encabezado\n        }\n      });\n      if (response.status === 201) {\n        return response.data; // Retorna los datos del producto creado\n      } else {\n        throw new Error('Error creating product');\n      }\n    } catch (error) {\n      console.error('Error in addProduct:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  },\n  async getProductById(productId) {\n    try {\n      const token = getAuthToken();\n      const response = await axiosInstance.get(`${API_URL}/${productId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Incluye el token en el encabezado\n        }\n      });\n      return response.data; // Retorna los datos del producto\n    } catch (error) {\n      console.error('Error fetching product by ID:', error.response ? error.response.data : error.message);\n      throw error; // Lanza el error para manejarlo en la llamada\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","API_URL","getAuthToken","localStorage","getItem","productsService","getProductsByRestaurant","restaurantId","token","console","log","response","get","headers","Authorization","data","error","message","deleteProduct","productId","delete","updateProduct","product","put","id","productName","productPrice","productImageUrl","category","addProduct","post","status","Error","getProductById"],"sources":["E:/kitchen-tech-repo/src/public/services/productsService.js"],"sourcesContent":["import axiosInstance from \"./axiosConfig\"; // Asegúrate de que la ruta sea correcta\r\n\r\nconst API_URL = '/product';\r\n\r\nconst getAuthToken = () => {\r\n    return localStorage.getItem('token'); // Obtiene el token del localStorage\r\n};\r\n\r\nexport const productsService = {\r\n    async getProductsByRestaurant(restaurantId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            console.log(\"Token:\", token);\r\n            const response = await axiosInstance.get(`${API_URL}/restaurant/${restaurantId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\r\n                }\r\n            });\r\n            return response.data; // Retorna los datos de los productos\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    },\r\n    async deleteProduct(productId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.delete(`${API_URL}/${productId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token como Bearer en el encabezado\r\n                }\r\n            });\r\n            return response.data; // Retorna los datos de la respuesta\r\n        } catch (error) {\r\n            console.error('Error deleting product:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    },\r\n    async updateProduct(product) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.put(`${API_URL}/${product.id}`, {\r\n                id: product.id,\r\n                productName: product.productName,\r\n                productPrice: product.productPrice,\r\n                productImageUrl: product.productImageUrl,\r\n                category: product.category,\r\n                restaurantId: product.restaurantId,\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token en el encabezado\r\n                }\r\n            });\r\n            return response.data; // Retorna los datos de la respuesta\r\n        } catch (error) {\r\n            console.error('Error updating product:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    },\r\n    async addProduct(product) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.post(`${API_URL}`, {\r\n                productName: product.productName,\r\n                productPrice: product.productPrice,\r\n                productImageUrl: product.productImageUrl,\r\n                category: product.category,\r\n                restaurantId: product.restaurantId,\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token en el encabezado\r\n                }\r\n            });\r\n            if (response.status === 201) {\r\n                return response.data; // Retorna los datos del producto creado\r\n            } else {\r\n                throw new Error('Error creating product');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error in addProduct:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    },\r\n    async getProductById(productId) {\r\n        try {\r\n            const token = getAuthToken();\r\n            const response = await axiosInstance.get(`${API_URL}/${productId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}` // Incluye el token en el encabezado\r\n                }\r\n            });\r\n            return response.data; // Retorna los datos del producto\r\n        } catch (error) {\r\n            console.error('Error fetching product by ID:', error.response ? error.response.data : error.message);\r\n            throw error; // Lanza el error para manejarlo en la llamada\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}