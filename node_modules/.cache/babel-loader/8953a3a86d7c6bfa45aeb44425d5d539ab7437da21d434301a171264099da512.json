{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\nimport { supplyService } from \"@/public/services/supplyService\"; // Cambia según tu servicio\n\nexport default {\n  components: {\n    HeaderComponent,\n    SidebarComponent\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      supplies: [],\n      searchQuery: '',\n      filteredSupplies: [],\n      isSupplyConfigOpen: false,\n      // Control for overlay visibility\n      newSupplyMetricUnit: '',\n      // Selección del usuario\n      newSupplyState: '',\n      // Selección del usuario\n\n      // Enums\n      MetricUnit: {\n        Kg: 'Kg',\n        G: 'g',\n        L: 'L',\n        Ml: 'ml',\n        Unit: 'u'\n      },\n      SupplyState: {\n        OnStock: 'OnStock',\n        OffStock: 'OffStock'\n      }\n    };\n  },\n  beforeMount() {\n    this.fetchUserData();\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (userData) {\n      this.restaurantName = userData['business-name']; // Si no tienes 'business-name' puedes colocar un valor predeterminado.\n      this.userRole = userData.role;\n      this.restaurantId = userData.restaurantId; // Asegúrate de que restaurantId está aquí.\n      //console.log('Restaurant ID:', this.restaurantId);\n    }\n    this.loadSupplies();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          this.restaurantName = \"Mock Restaurant\"; // Cambia según tu lógica\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    async loadSupplies() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const restaurantId = userData.restaurantId;\n      try {\n        const supplies = await supplyService.getSuppliesByRestaurant(restaurantId);\n        this.supplies = Array.isArray(supplies) ? supplies : [];\n        this.filteredSupplies = this.supplies;\n      } catch (error) {\n        console.error(\"Failed to load supplies\", error);\n      }\n      this.filteredSupplies = this.supplies;\n    },\n    filterSupplies() {\n      const query = this.searchQuery.toLowerCase();\n      this.filteredSupplies = this.supplies.filter(supply => supply.supplyName.toLowerCase().includes(query));\n    },\n    async addSupply() {\n      // Validar las selecciones del usuario\n      if (!Object.values(this.SupplyState).includes(this.newSupplyState) || !Object.values(this.MetricUnit).includes(this.newSupplyMetricUnit)) {\n        alert(\"Invalid data selected.\");\n        return;\n      }\n      if (this.supplyToEdit) {\n        // Si estamos editando, actualiza el suministro existente\n        await this.updateSupply();\n      } else {\n        if (!Array.isArray(this.supplies)) {\n          console.error(\"Supplies no es array\");\n          this.supplies = []; // Reinicializa como un array vacío si es necesario\n        }\n\n        /*const isNameTaken = this.supplies.some(supply => supply.supplyName.toLowerCase() === this.newSupplyName.toLowerCase());\r\n        if (isNameTaken) {\r\n          alert(\"A supply with this name already exists.\");\r\n          return;\r\n        }*/\n\n        if (!this.validateSupplyData()) return;\n\n        // Crear un nuevo suministro\n        const newSupply = {\n          supplyName: this.newSupplyName,\n          supplyCategory: this.newSupplyCategory,\n          metricUnit: this.newSupplyMetricUnit,\n          currentlyOnStock: this.newSupplyStock,\n          costPerUnit: this.newSupplyCostPerUnit,\n          stateOfSupply: this.newSupplyState,\n          restaurantId: this.restaurantId\n        };\n        console.log(this.restaurantId);\n        try {\n          const response = await supplyService.addSupply(newSupply);\n          if (response) {\n            this.supplies.push(response);\n            this.filterSupplies(); // Actualiza la lista filtrada\n            this.closeSupplyConfig(); // Cierra el modal\n          }\n        } catch (error) {\n          console.error(\"Error adding supply:\", error);\n        }\n      }\n    },\n    openSupplyConfig() {\n      this.isSupplyConfigOpen = true; // Show the overlay\n      this.newSupplyName = '';\n      this.newSupplyCategory = '';\n      this.newSupplyMetricUnit = '';\n      this.newSupplyStock = 0;\n      this.newSupplyCostPerUnit = 0;\n      this.newSupplyState = '';\n    },\n    closeSupplyConfig() {\n      this.isSupplyConfigOpen = false;\n      this.newSupplyName = '';\n      this.newSupplyCategory = '';\n      this.newSupplyMetricUnit = '';\n      this.newSupplyStock = 0;\n      this.newSupplyCostPerUnit = 0;\n      this.newSupplyState = '';\n      this.supplyToEdit = null; // Limpiar referencia\n    },\n    editSupply(supply) {\n      // Prellenar el formulario con los datos existentes\n      this.newSupplyName = supply.supplyName;\n      this.newSupplyCategory = supply.supplyCategory;\n      this.newSupplyMetricUnit = supply.metricUnit;\n      this.newSupplyStock = supply.currentlyOnStock;\n      this.newSupplyCostPerUnit = supply.costPerUnit;\n      this.newSupplyState = supply.stateOfSupply;\n\n      // Guardar la referencia del suministro que estamos editando\n      this.supplyToEdit = supply;\n      //console.log(\"supply: \", supply)\n      //console.log(\"supply edit: \", this.supplyToEdit)\n\n      // Mostrar el formulario de configuración\n      this.isSupplyConfigOpen = true;\n    },\n    async updateSupply() {\n      if (!this.validateSupplyData()) return;\n      const updatedSupply = {\n        id: this.supplyToEdit.id,\n        supplyName: this.newSupplyName,\n        supplyCategory: this.newSupplyCategory,\n        metricUnit: this.newSupplyMetricUnit,\n        currentlyOnStock: this.newSupplyStock,\n        costPerUnit: this.newSupplyCostPerUnit,\n        stateOfSupply: this.newSupplyState\n      };\n      try {\n        // Llamada al servicio para actualizar el suministro\n        await supplyService.updateSupply(updatedSupply.id, updatedSupply);\n\n        // Actualizar el suministro en la lista\n        const index = this.supplies.findIndex(s => s.id === updatedSupply.id);\n        if (index !== -1) {\n          this.supplies.splice(index, 1, updatedSupply);\n          this.filteredSupplies.splice(index, 1, updatedSupply);\n        }\n\n        // Cerrar el formulario de configuración\n        this.closeSupplyConfig();\n      } catch (error) {\n        console.error(\"Error updating supply:\", error);\n      }\n    },\n    async deleteSupply(id) {\n      const confirmation = window.confirm(\"Are you sure you want to delete this supply?\");\n      if (confirmation) {\n        try {\n          // Llamada al servicio para eliminar el suministro\n          await supplyService.deleteSupply(id);\n\n          // Eliminarlo del arreglo local\n          this.supplies = this.supplies.filter(supply => supply.id !== id);\n          this.filteredSupplies = this.filteredSupplies.filter(supply => supply.id !== id);\n        } catch (error) {\n          console.error(\"Error deleting supply:\", error);\n        }\n      }\n    },\n    validateSupplyData() {\n      const errors = [];\n      if (!this.newSupplyName) errors.push(\"Supply Name is required.\");\n      if (!this.newSupplyCategory) errors.push(\"Category is required.\");\n      if (!this.newSupplyMetricUnit || !Object.values(this.MetricUnit).includes(this.newSupplyMetricUnit)) {\n        errors.push(\"Invalid Metric Unit.\");\n      }\n      if (this.newSupplyStock === null || this.newSupplyStock < 0) {\n        errors.push(\"Stock must be a non-negative number.\");\n      }\n      if (this.newSupplyCostPerUnit === null || this.newSupplyCostPerUnit < 0) {\n        errors.push(\"Cost per Unit must be a non-negative number.\");\n      }\n      if (!this.newSupplyState || !Object.values(this.SupplyState).includes(this.newSupplyState)) {\n        errors.push(\"Invalid Supply State.\");\n      }\n      if (errors.length > 0) {\n        alert(errors.join(\"\\n\")); // Mostrar errores al usuario\n        return false;\n      }\n      return true; // Todos los datos son válidos\n    }\n  }\n};","map":{"version":3,"names":["HeaderComponent","SidebarComponent","supplyService","components","data","restaurantName","userRole","supplies","searchQuery","filteredSupplies","isSupplyConfigOpen","newSupplyMetricUnit","newSupplyState","MetricUnit","Kg","G","L","Ml","Unit","SupplyState","OnStock","OffStock","beforeMount","fetchUserData","userData","JSON","parse","localStorage","getItem","role","restaurantId","loadSupplies","methods","error","console","getSuppliesByRestaurant","Array","isArray","filterSupplies","query","toLowerCase","filter","supply","supplyName","includes","addSupply","Object","values","alert","supplyToEdit","updateSupply","validateSupplyData","newSupply","newSupplyName","supplyCategory","newSupplyCategory","metricUnit","currentlyOnStock","newSupplyStock","costPerUnit","newSupplyCostPerUnit","stateOfSupply","log","response","push","closeSupplyConfig","openSupplyConfig","editSupply","updatedSupply","id","index","findIndex","s","splice","deleteSupply","confirmation","window","confirm","errors","length","join"],"sources":["E:\\Kitchen Tech\\src\\admins\\views\\inventory-page.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <sidebar-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"sidebar\" />\r\n    <div class=\"main-content\">\r\n      <header-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"header\" />\r\n      <div class=\"page-container\">\r\n        <main class=\"supplies-page\">\r\n          <div class=\"content-wrapper\">\r\n            <div class=\"supplies-header\">\r\n              <input\r\n                class=\"search-bar\"\r\n                type=\"text\"\r\n                v-model=\"searchQuery\"\r\n                placeholder=\"Search supplies...\"\r\n                @input=\"filterSupplies\"\r\n              />\r\n              <button class=\"add-button\" @click=\"openSupplyConfig\">Add Supply</button>\r\n            </div>\r\n            <div class=\"supply-table-container\">\r\n              <template v-if=\"filteredSupplies.length === 0\">\r\n                <div class=\"no-supplies\">\r\n                  <label>No supplies available.</label>\r\n                </div>\r\n              </template>\r\n              <template v-else>\r\n                <table class=\"supply-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Supply Name</th>\r\n                      <th>Category</th>\r\n                      <th>Metric Unit</th>\r\n                      <th>Stock</th>\r\n                      <th>Cost per Unit</th>\r\n                      <th>Status</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"supply in filteredSupplies\" :key=\"supply.id\">\r\n                      <td>{{ supply.supplyName }}</td>\r\n                      <td>{{ supply.supplyCategory }}</td>\r\n                      <td>{{ supply.metricUnit }}</td>\r\n                      <td>{{ supply.currentlyOnStock }}</td>\r\n                      <td>${{ supply.costPerUnit.toFixed(2) }}</td>\r\n                      <td>{{ supply.stateOfSupply }}</td>\r\n                      <td>\r\n                        <button class=\"edit-button\" @click=\"editSupply(supply)\">Edit</button>\r\n                        <button class=\"delete-button\" @click=\"deleteSupply(supply.id)\">Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </template>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Supply Config Overlay -->\r\n    <div v-if=\"isSupplyConfigOpen\" class=\"supply-config-overlay\">\r\n      <div class=\"supply-config-modal\">\r\n        <p class=\"modal-title\">{{ supplyToEdit ? 'Edit Supply' : 'Add Supply'}}</p>\r\n        <div class=\"modal-content\">\r\n          <div class=\"form-group\">\r\n            <label for=\"supply-name\">Supply Name</label>\r\n            <input type=\"text\" v-model=\"newSupplyName\" id=\"supply-name\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"supply-category\">Category</label>\r\n            <input type=\"text\" v-model=\"newSupplyCategory\" id=\"supply-category\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"metric-unit\">Metric Unit</label>\r\n            <select class=\"selector\" v-model=\"newSupplyMetricUnit\" id=\"metric-unit\">\r\n              <option class=\"option\" v-for=\"(unit, key) in MetricUnit\" :key=\"key\" :value=\"unit\">\r\n                {{ unit }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"stock\">Stock</label>\r\n            <input type=\"number\" v-model=\"newSupplyStock\" id=\"stock\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"cost\">Cost per Unit</label>\r\n            <input type=\"number\" v-model=\"newSupplyCostPerUnit\" id=\"cost\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select class=\"selector\" v-model=\"newSupplyState\" id=\"state\">\r\n              <option class=\"option\" v-for=\"(state, key) in SupplyState\" :key=\"key\" :value=\"state\">\r\n                {{ state }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"button\" @click=\"closeSupplyConfig\">Close</button>\r\n            <button class=\"button\" @click=\"addSupply\">{{ supplyToEdit ? 'Update' : 'Save' }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\r\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\r\nimport { supplyService } from \"@/public/services/supplyService\"; // Cambia según tu servicio\r\n\r\nexport default {\r\n  components: {\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      supplies: [],\r\n      searchQuery: '',\r\n      filteredSupplies: [],\r\n      isSupplyConfigOpen: false,  // Control for overlay visibility\r\n      newSupplyMetricUnit: '', // Selección del usuario\r\n      newSupplyState: '', // Selección del usuario\r\n      \r\n\r\n      // Enums\r\n      MetricUnit: {\r\n        Kg: 'Kg',\r\n        G: 'g',\r\n        L: 'L',\r\n        Ml: 'ml',\r\n        Unit: 'u',\r\n      },\r\n      SupplyState: {\r\n        OnStock: 'OnStock',\r\n        OffStock: 'OffStock',\r\n      },\r\n    };\r\n  },\r\n  beforeMount() {\r\n    this.fetchUserData();\r\n\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    if (userData) {\r\n      this.restaurantName = userData['business-name']; // Si no tienes 'business-name' puedes colocar un valor predeterminado.\r\n      this.userRole = userData.role;\r\n      this.restaurantId = userData.restaurantId;  // Asegúrate de que restaurantId está aquí.\r\n      //console.log('Restaurant ID:', this.restaurantId);\r\n    }\r\n    this.loadSupplies();\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          this.restaurantName = \"Mock Restaurant\"; // Cambia según tu lógica\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n\r\n    async loadSupplies() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const restaurantId = userData.restaurantId;\r\n\r\n      try {\r\n        const supplies = await supplyService.getSuppliesByRestaurant(restaurantId);\r\n        this.supplies = Array.isArray(supplies) ? supplies : [];\r\n        this.filteredSupplies = this.supplies;\r\n      } catch (error) {\r\n        console.error(\"Failed to load supplies\", error);\r\n      }\r\n      this.filteredSupplies = this.supplies;\r\n    },\r\n\r\n    filterSupplies() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      this.filteredSupplies = this.supplies.filter((supply) =>\r\n        supply.supplyName.toLowerCase().includes(query)\r\n      );\r\n    },\r\n\r\n    async addSupply() {\r\n      // Validar las selecciones del usuario\r\n      if (!Object.values(this.SupplyState).includes(this.newSupplyState) || \r\n          !Object.values(this.MetricUnit).includes(this.newSupplyMetricUnit)) {\r\n        alert(\"Invalid data selected.\");\r\n        return;\r\n      }\r\n\r\n      if (this.supplyToEdit) {\r\n        // Si estamos editando, actualiza el suministro existente\r\n        await this.updateSupply();\r\n      } else {\r\n\r\n        if (!Array.isArray(this.supplies)) {\r\n          console.error(\"Supplies no es array\");\r\n          this.supplies = []; // Reinicializa como un array vacío si es necesario\r\n        }\r\n\r\n        /*const isNameTaken = this.supplies.some(supply => supply.supplyName.toLowerCase() === this.newSupplyName.toLowerCase());\r\n        if (isNameTaken) {\r\n          alert(\"A supply with this name already exists.\");\r\n          return;\r\n        }*/\r\n\r\n        if (!this.validateSupplyData()) return;\r\n\r\n        // Crear un nuevo suministro\r\n        const newSupply = {\r\n          supplyName: this.newSupplyName,\r\n          supplyCategory: this.newSupplyCategory,\r\n          metricUnit: this.newSupplyMetricUnit,\r\n          currentlyOnStock: this.newSupplyStock,\r\n          costPerUnit: this.newSupplyCostPerUnit,\r\n          stateOfSupply: this.newSupplyState,\r\n          restaurantId: this.restaurantId,\r\n        };\r\n        \r\n        console.log(this.restaurantId);\r\n\r\n        try {\r\n          const response = await supplyService.addSupply(newSupply);\r\n          if (response) {\r\n            this.supplies.push(response);\r\n            this.filterSupplies(); // Actualiza la lista filtrada\r\n            this.closeSupplyConfig(); // Cierra el modal\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error adding supply:\", error);\r\n        }\r\n      }\r\n    },\r\n\r\n    openSupplyConfig() {\r\n      this.isSupplyConfigOpen = true; // Show the overlay\r\n      this.newSupplyName = '';\r\n      this.newSupplyCategory = '';\r\n      this.newSupplyMetricUnit = '';\r\n      this.newSupplyStock = 0;\r\n      this.newSupplyCostPerUnit = 0;\r\n      this.newSupplyState = '';\r\n    },\r\n\r\n    closeSupplyConfig() {\r\n      this.isSupplyConfigOpen = false;\r\n      this.newSupplyName = '';\r\n      this.newSupplyCategory = '';\r\n      this.newSupplyMetricUnit = '';\r\n      this.newSupplyStock = 0;\r\n      this.newSupplyCostPerUnit = 0;\r\n      this.newSupplyState = '';\r\n      this.supplyToEdit = null; // Limpiar referencia\r\n    },\r\n\r\n    editSupply(supply) {\r\n      // Prellenar el formulario con los datos existentes\r\n      this.newSupplyName = supply.supplyName;\r\n      this.newSupplyCategory = supply.supplyCategory;\r\n      this.newSupplyMetricUnit = supply.metricUnit;\r\n      this.newSupplyStock = supply.currentlyOnStock;\r\n      this.newSupplyCostPerUnit = supply.costPerUnit;\r\n      this.newSupplyState = supply.stateOfSupply;\r\n\r\n      // Guardar la referencia del suministro que estamos editando\r\n      this.supplyToEdit = supply;\r\n      //console.log(\"supply: \", supply)\r\n      //console.log(\"supply edit: \", this.supplyToEdit)\r\n\r\n      // Mostrar el formulario de configuración\r\n      this.isSupplyConfigOpen = true;\r\n    },\r\n\r\n    async updateSupply() {\r\n\r\n      if (!this.validateSupplyData()) return;\r\n\r\n      const updatedSupply = {\r\n        id: this.supplyToEdit.id,\r\n        supplyName: this.newSupplyName,\r\n        supplyCategory: this.newSupplyCategory,\r\n        metricUnit: this.newSupplyMetricUnit,\r\n        currentlyOnStock: this.newSupplyStock,\r\n        costPerUnit: this.newSupplyCostPerUnit,\r\n        stateOfSupply: this.newSupplyState,\r\n      };\r\n\r\n      try {\r\n        // Llamada al servicio para actualizar el suministro\r\n        await supplyService.updateSupply(updatedSupply.id, updatedSupply);\r\n        \r\n        // Actualizar el suministro en la lista\r\n        const index = this.supplies.findIndex(s => s.id === updatedSupply.id);\r\n        if (index !== -1) {\r\n          this.supplies.splice(index, 1, updatedSupply);\r\n          this.filteredSupplies.splice(index, 1, updatedSupply);\r\n        }\r\n        \r\n        // Cerrar el formulario de configuración\r\n        this.closeSupplyConfig();\r\n      } catch (error) {\r\n        console.error(\"Error updating supply:\", error);\r\n      }\r\n    },\r\n\r\n    async deleteSupply(id) {\r\n      const confirmation = window.confirm(\"Are you sure you want to delete this supply?\");\r\n      \r\n      if (confirmation) {\r\n        try {\r\n          // Llamada al servicio para eliminar el suministro\r\n          await supplyService.deleteSupply(id);\r\n\r\n          // Eliminarlo del arreglo local\r\n          this.supplies = this.supplies.filter(supply => supply.id !== id);\r\n          this.filteredSupplies = this.filteredSupplies.filter(supply => supply.id !== id);\r\n        } catch (error) {\r\n          console.error(\"Error deleting supply:\", error);\r\n        }\r\n      }\r\n    },\r\n\r\n    validateSupplyData() {\r\n      const errors = [];\r\n      \r\n      if (!this.newSupplyName) errors.push(\"Supply Name is required.\");\r\n      if (!this.newSupplyCategory) errors.push(\"Category is required.\");\r\n      if (!this.newSupplyMetricUnit || !Object.values(this.MetricUnit).includes(this.newSupplyMetricUnit)) {\r\n        errors.push(\"Invalid Metric Unit.\");\r\n      }\r\n      if (this.newSupplyStock === null || this.newSupplyStock < 0) {\r\n        errors.push(\"Stock must be a non-negative number.\");\r\n      }\r\n      if (this.newSupplyCostPerUnit === null || this.newSupplyCostPerUnit < 0) {\r\n        errors.push(\"Cost per Unit must be a non-negative number.\");\r\n      }\r\n      if (!this.newSupplyState || !Object.values(this.SupplyState).includes(this.newSupplyState)) {\r\n        errors.push(\"Invalid Supply State.\");\r\n      }\r\n      \r\n      if (errors.length > 0) {\r\n        alert(errors.join(\"\\n\")); // Mostrar errores al usuario\r\n        return false;\r\n      }\r\n      \r\n      return true; // Todos los datos son válidos\r\n    }\r\n    \r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: #F6F5FA;\r\n}\r\n.main-content {\r\n  margin-left: 255px;\r\n  width: calc(100% - 280px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.page-container {\r\n  margin-top: 70px;\r\n  padding: 20px;\r\n  background-color: #F6F5FA;\r\n  height: calc(100vh - 100px);\r\n  font-family: 'Red Hat Display', sans-serif;\r\n}\r\n.no-supplies {\r\n  text-align: center;\r\n  color: #31304A;\r\n}\r\n.supplies-header {\r\n  display: flex;\r\n  max-width: 1000px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 10px;\r\n  gap: 10px;\r\n}\r\n.search-bar {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #31304A;\r\n  background-color: #D3D2E5;\r\n  max-width: 1000px;\r\n}\r\n.add-button {\r\n  padding: 13px 20px;\r\n  background: #D3D2E5;\r\n  color: #31304A;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-weight: 800;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.supply-table-container {\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  margin: 20px auto;\r\n}\r\n.supply-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n.supply-table th, .supply-table td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #D3D2E5;\r\n}\r\n.supply-table th {\r\n  background-color: #D3D2E5;\r\n  color: #31304A;\r\n}\r\n.supply-table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.edit-button,\r\n.delete-button {\r\n  padding: 8px 12px;\r\n  margin: 0 5px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #5E5E99;\r\n  color: white;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #4B4A78;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #FF6347;\r\n  color: white;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #E0533C;\r\n}\r\n\r\n/* Supply Config Overlay Styles */\r\n.supply-config-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  font-family: 'Red-hat-display', sans-serif;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.supply-config-modal {\r\n  background-color: #F6F5FA;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 50%;\r\n  text-align: center;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\r\n}\r\n.modal-content{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 0 10%;\r\n}\r\n.modal-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 800;\r\n  margin-bottom: 20px;\r\n  color: #31304A;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n  text-align: left;\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 800px;\r\n}\r\n.selector{\r\n  border-radius: 5px;\r\n  background-color: #D3D2E5;\r\n  border: none;\r\n  padding: 10px;\r\n  color: #31304A;\r\n  font-size: 1.2rem;\r\n}\r\n.option{\r\n  font-size: 0.8rem;\r\n  padding: 10px;\r\n}\r\n.form-group label {\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: #31304A;\r\n  margin-bottom: 5px;\r\n  display: block;\r\n  max-width: 200px;\r\n}\r\n.form-group input {\r\n  max-width: 768px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #D3D2E5;\r\n  font-size: 1.2rem;\r\n  color: #31304A;\r\n}\r\n\r\n.modal-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.button {\r\n  padding: 10px 20px;\r\n  background-color: #31304A;\r\n  color: #F6F5FA;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n}\r\n.button:active {\r\n  background-color: #201E35;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .layout {\r\n    flex-direction: column;\r\n  }\r\n  .sidebar {\r\n    display: none;\r\n  }\r\n  .main-content {\r\n    margin-left: 0;\r\n  }\r\n  .supply-table th, .supply-table td {\r\n    font-size: 12px;\r\n  }\r\n  .add-button {\r\n    font-size: 12px;\r\n    padding: 8px;\r\n  }\r\n}\r\n@media (max-width: 480px) {\r\n  .search-bar {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}