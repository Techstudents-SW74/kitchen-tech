{"ast":null,"code":"export default {\n  props: {\n    restaurantName: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      accounts: [],\n      filteredAccounts: []\n    };\n  },\n  mounted() {\n    if (this.restaurantName) {\n      this.loadProducts();\n    } else {\n      console.error('Restaurant name is required');\n    }\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  },\n  methods: {\n    async loadAccounts() {},\n    filterAccounts() {\n      try {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredAccounts = this.accounts.filter(account => account.accountName.toLowerCase().includes(query));\n      } catch (error) {\n        console.log(\"There are not accounts to show\");\n      }\n    },\n    onSearchFocus() {\n      if (this.searchQuery) {\n        this.filterAccounts();\n      }\n    },\n    toggleTablesMode() {\n      this.$emit('toggle-tables-mode');\n    },\n    toggleAccountsMode() {\n      this.$emit('toggle-accounts-mode');\n    }\n  }\n};","map":{"version":3,"names":["props","restaurantName","type","String","required","data","searchQuery","accounts","filteredAccounts","mounted","loadProducts","console","error","document","addEventListener","handleClickOutside","beforeUnmount","removeEventListener","methods","loadAccounts","filterAccounts","query","toLowerCase","filter","account","accountName","includes","log","onSearchFocus","toggleTablesMode","$emit","toggleAccountsMode"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\saved-accounts-views\\components\\searchbar-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"products-header\">\r\n    <input\r\n        class=\"search-bar\"\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search accounts...\"\r\n        @input=\"filterAccounts\"\r\n        @focus=\"onSearchFocus\"\r\n    />\r\n    <ul v-if=\"filteredAccounts.length && searchQuery\" class=\"dropdown\">\r\n      <li v-for=\"account in filteredAccounts\" :key=\"account.id\" class=\"account-card\">\r\n        <div class=\"card-content\">\r\n          <span class=\"account-name\">{{ account.accountName }}</span>\r\n          <span class=\"total-account\">S/.{{ account.totalAccount }}</span>\r\n          <span class=\"account-client\">S/.{{ account.client }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button class=\"table-button\" @click=\"toggleTablesMode\">Show tables</button>\r\n    <button class=\"account-button\" @click=\"toggleAccountsMode\">Show Account</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    restaurantName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      accounts: [],\r\n      filteredAccounts: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    if(this.restaurantName) {\r\n      this.loadProducts();\r\n    } else {\r\n      console.error('Restaurant name is required');\r\n    }\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  },\r\n  methods: {\r\n    async loadAccounts() {\r\n\r\n    },\r\n    filterAccounts() {\r\n      try{\r\n        const query = this.searchQuery.toLowerCase();\r\n        this.filteredAccounts = this.accounts.filter((account) =>\r\n            account.accountName.toLowerCase().includes(query)\r\n        );\r\n      } catch (error){\r\n        console.log(\"There are not accounts to show\")\r\n      }\r\n    },\r\n    onSearchFocus() {\r\n      if (this.searchQuery) {\r\n        this.filterAccounts();\r\n      }\r\n    },\r\n    toggleTablesMode() {\r\n      this.$emit('toggle-tables-mode');\r\n    },\r\n    toggleAccountsMode() {\r\n      this.$emit('toggle-accounts-mode');\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AAyBA,eAAe;EACbA,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAG,IAAI,CAACR,cAAc,EAAE;MACtB,IAAI,CAACS,YAAY,CAAC,CAAC;IACrB,OAAO;MACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC9C;IACAC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,kBAAkB,CAAC;EAC7D,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,QAAQ,CAACI,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACF,kBAAkB,CAAC;EAChE,CAAC;EACDG,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG,CAErB,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAG;QACD,MAAMC,KAAI,GAAI,IAAI,CAACf,WAAW,CAACgB,WAAW,CAAC,CAAC;QAC5C,IAAI,CAACd,gBAAe,GAAI,IAAI,CAACD,QAAQ,CAACgB,MAAM,CAAEC,OAAO,IACjDA,OAAO,CAACC,WAAW,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,CACpD,CAAC;MACH,EAAE,OAAOT,KAAK,EAAC;QACbD,OAAO,CAACgB,GAAG,CAAC,gCAAgC;MAC9C;IACF,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACtB,WAAW,EAAE;QACpB,IAAI,CAACc,cAAc,CAAC,CAAC;MACvB;IACF,CAAC;IACDS,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAClC,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACpC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}