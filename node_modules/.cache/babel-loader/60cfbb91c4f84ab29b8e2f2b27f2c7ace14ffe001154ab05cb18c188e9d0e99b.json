{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\nimport ProductGridComponent from \"@/admins/views/cassing-views/components/product-grid-component.vue\";\nimport CartSummaryComponent from \"@/admins/views/cassing-views/components/cart-summary-component.vue\";\nimport FavoriteProductHeaderComponent from \"@/admins/views/cassing-views/components/favorite-product-header.vue\";\nimport userService from \"@/public/services/userService\";\nexport default {\n  components: {\n    FavoriteProductHeaderComponent,\n    HeaderComponent,\n    SidebarComponent,\n    ProductGridComponent,\n    CartSummaryComponent\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      cart: [],\n      subtotal: 0,\n      igv: 0,\n      total: 0,\n      isEditMode: false,\n      selectedSlot: null,\n      favoriteProducts: Array(30).fill(null)\n    };\n  },\n  mounted() {\n    this.fetchUserData();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          const restaurantData = await userService.getRestaurantById(restaurantId);\n          this.restaurantName = restaurantData.name;\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    toggleEditMode() {\n      this.isEditMode = !this.isEditMode;\n    },\n    openProductList(index) {\n      this.selectedSlot = index;\n    },\n    addToSlot({\n      product,\n      slot\n    }) {\n      this.favoriteProducts[slot] = product;\n    },\n    removeProductFromFavorites(index) {\n      this.favoriteProducts[index] = null;\n    },\n    addCustomer() {\n      // Lógica para agregar un cliente\n    },\n    addProductToCart(product) {\n      const existingItem = this.cart.find(item => item.id === product.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        this.cart.push({\n          ...product,\n          quantity: 1\n        });\n      }\n      this.updateCartSummary();\n    },\n    updateCartSummary() {\n      this.subtotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      this.igv = this.subtotal * 0.18; // Calcular IGV (18%)\n      this.total = this.subtotal;\n    },\n    handleUpdateCart(updatedCart) {\n      this.cart = updatedCart;\n    },\n    handleUpdateSummary({\n      subtotal,\n      igv,\n      total\n    }) {\n      this.subtotal = subtotal;\n      this.igv = igv;\n      this.total = total;\n    },\n    /*async saveSale(orderData) {\r\n      const newOrder = {\r\n        id: null,\r\n        \"order-title\": orderData,\r\n        \"order-took\": `${new Date().toLocaleString()}`,\r\n        products: this.cart.map((item) => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          quantity: item.quantity,\r\n          price: item.price,\r\n        })),\r\n      };\r\n        try {\r\n        const result = await accountService.addOrder(this.restaurantName, newOrder);\r\n        if(result.success){\r\n          this.$router.push(`/${this.restaurantName}/${this.userRole}/saved-accounts`);\r\n          alert(\"Orden guardada exitosamente\");\r\n        } else {\r\n          alert(`Error guardando la orden: ${result.message}`);\r\n        }\r\n      } catch (error){\r\n        console.error(\"Error al guardar la orden:\", error);\r\n      }\r\n    },*/\n    charge() {\n      // Lógica para procesar el cobro\n    }\n  }\n};","map":{"version":3,"names":["HeaderComponent","SidebarComponent","ProductGridComponent","CartSummaryComponent","FavoriteProductHeaderComponent","userService","components","data","restaurantName","userRole","cart","subtotal","igv","total","isEditMode","selectedSlot","favoriteProducts","Array","fill","mounted","fetchUserData","methods","userData","JSON","parse","localStorage","getItem","restaurantId","restaurantData","getRestaurantById","name","role","error","console","toggleEditMode","openProductList","index","addToSlot","product","slot","removeProductFromFavorites","addCustomer","addProductToCart","existingItem","find","item","id","quantity","push","updateCartSummary","reduce","acc","price","handleUpdateCart","updatedCart","handleUpdateSummary","charge"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\cassing-views\\casing-page.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <sidebar-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"sidebar\" />\r\n    <div class=\"main-content\">\r\n      <header-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"header\" />\r\n      <div class=\"page-container\">\r\n        <div class=\"left-section\">\r\n          <favorite-product-header-component\r\n              v-if=\"restaurantName\"\r\n              :is-edit-mode=\"isEditMode\"\r\n              :restaurant-name=\"restaurantName\"\r\n              :selected-slot=\"selectedSlot\"\r\n              :cart=\"cart\"\r\n              @toggle-edit-mode=\"toggleEditMode\"\r\n              @add-to-slot=\"addToSlot\"\r\n              @add-to-cart=\"addProductToCart\"\r\n          />\r\n          <product-grid-component\r\n              :favorite-products=\"favoriteProducts\"\r\n              :is-edit-mode=\"isEditMode\"\r\n              @open-product-list=\"openProductList\"\r\n              @remove-product-from-favorites=\"removeProductFromFavorites\"\r\n          />\r\n        </div>\r\n        <div class=\"right-section\">\r\n          <cart-summary-component\r\n              :cart=\"cart\"\r\n              :subtotal=\"subtotal\"\r\n              :igv=\"igv\"\r\n              :total=\"total\"\r\n              @add-customer=\"addCustomer\"\r\n              @save-sale=\"saveSale\"\r\n              @charge=\"charge\"\r\n              @update-cart=\"handleUpdateCart\"\r\n              @update-summary=\"handleUpdateSummary\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\r\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\r\nimport ProductGridComponent from \"@/admins/views/cassing-views/components/product-grid-component.vue\";\r\nimport CartSummaryComponent from \"@/admins/views/cassing-views/components/cart-summary-component.vue\";\r\nimport FavoriteProductHeaderComponent from \"@/admins/views/cassing-views/components/favorite-product-header.vue\";\r\nimport userService from \"@/public/services/userService\";\r\n\r\nexport default {\r\n  components: {\r\n    FavoriteProductHeaderComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    ProductGridComponent,\r\n    CartSummaryComponent\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      cart: [],\r\n      subtotal: 0,\r\n      igv: 0,\r\n      total: 0,\r\n      isEditMode: false,\r\n      selectedSlot: null,\r\n      favoriteProducts: Array(30).fill(null),\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData();\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          const restaurantData = await userService.getRestaurantById(restaurantId);\r\n          this.restaurantName = restaurantData.name;\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n\r\n    toggleEditMode(){\r\n      this.isEditMode = !this.isEditMode;\r\n    },\r\n    openProductList(index) {\r\n      this.selectedSlot = index;\r\n    },\r\n    addToSlot({product, slot}){\r\n      this.favoriteProducts[slot] = product;\r\n    },\r\n    removeProductFromFavorites(index) {\r\n      this.favoriteProducts[index] = null;\r\n    },\r\n\r\n    addCustomer() {\r\n      // Lógica para agregar un cliente\r\n    },\r\n\r\n    addProductToCart(product) {\r\n      const existingItem = this.cart.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        this.cart.push({ ...product, quantity: 1 });\r\n      }\r\n      this.updateCartSummary();\r\n    },\r\n    updateCartSummary() {\r\n      this.subtotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n      this.igv = this.subtotal * 0.18; // Calcular IGV (18%)\r\n      this.total = this.subtotal;\r\n    },\r\n    handleUpdateCart(updatedCart) {\r\n      this.cart = updatedCart;\r\n    },\r\n    handleUpdateSummary({ subtotal, igv, total }) {\r\n      this.subtotal = subtotal;\r\n      this.igv = igv;\r\n      this.total = total;\r\n    },\r\n    /*async saveSale(orderData) {\r\n      const newOrder = {\r\n        id: null,\r\n        \"order-title\": orderData,\r\n        \"order-took\": `${new Date().toLocaleString()}`,\r\n        products: this.cart.map((item) => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          quantity: item.quantity,\r\n          price: item.price,\r\n        })),\r\n      };\r\n\r\n      try {\r\n        const result = await accountService.addOrder(this.restaurantName, newOrder);\r\n        if(result.success){\r\n          this.$router.push(`/${this.restaurantName}/${this.userRole}/saved-accounts`);\r\n          alert(\"Orden guardada exitosamente\");\r\n        } else {\r\n          alert(`Error guardando la orden: ${result.message}`);\r\n        }\r\n      } catch (error){\r\n        console.error(\"Error al guardar la orden:\", error);\r\n      }\r\n    },*/\r\n    charge() {\r\n      // Lógica para procesar el cobro\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n\r\n}\r\n.sidebar {\r\n  width: 280px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: #31304A;\r\n}\r\n.main-content {\r\n  margin-left: 280px; /* Desplaza el contenido a la derecha del sidebar */\r\n  width: calc(100% - 280px); /* Ajusta el ancho para ocupar el resto de la pantalla */\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: #5E5E99;\r\n  z-index: 1;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n.page-container {\r\n  margin-top: 100px; /* Desplaza el contenido principal por debajo del header */\r\n  padding: 20px;\r\n  background-color: #F6F5FA; /* Fondo blanco para la zona de contenido */\r\n  height: calc(100vh - 100px); /* Ajusta el alto para evitar desbordamientos */\r\n  overflow-y: auto; /* Permite el scroll si el contenido es muy largo */\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\nfavorite-product-header-component {\r\n  display: flex;\r\n  justify-content: space-between; /* Alinea la barra de búsqueda y el botón de edición */\r\n  margin-bottom: 20px; /* Separación entre el header y la cuadrícula de productos */\r\n}\r\n\r\n.left-section {\r\n  flex: 3; /* Hacer que la cuadrícula ocupe más espacio */\r\n\r\n}\r\n.right-section {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between; /* Para evitar la compresión vertical */\r\n  min-width: 350px;\r\n  min-height: 690px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}