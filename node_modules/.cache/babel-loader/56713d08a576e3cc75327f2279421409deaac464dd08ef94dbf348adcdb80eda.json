{"ast":null,"code":"import HeaderComponent from \"@/admins/components/header-component.vue\";\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\nimport userService from \"@/public/services/userService\";\nexport default {\n  components: {\n    HeaderComponent,\n    SidebarComponent\n  },\n  data() {\n    return {\n      restaurantName: '',\n      userRole: '',\n      userData: {\n        id: '',\n        username: ''\n      }\n    };\n  },\n  mounted() {\n    this.fetchUserData();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\n        const restaurantId = userData?.restaurantId;\n        if (restaurantId) {\n          const restaurantData = await userService.getRestaurantById(restaurantId);\n          this.restaurantName = restaurantData.name;\n          this.userRole = userData.role;\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data: \", error);\n      }\n    },\n    async updateRestaurant() {\n      try {\n        // Crea un objeto para almacenar los detalles actualizados, usando los valores actuales\n        const updatedDetails = {\n          username: this.userData.username,\n          firstName: this.userData.firstName,\n          lastName: this.userData.lastName,\n          email: this.userData.email,\n          phone: this.userData.phone,\n          birthDate: this.userData.birthDate,\n          // Este campo debe existir en userDetails\n          photo: this.userData.photo,\n          // Este campo también debe existir en userDetails\n          role: \"USER\",\n          // Rol fijo\n          restaurant: {\n            id: this.userData.restaurant.id // El ID del restaurante se obtiene del objeto\n          }\n        };\n\n        // Muestra en la consola los detalles que se enviarán\n        console.log(\"Datos enviados a la API:\", updatedDetails);\n\n        // Realiza la llamada a la API\n        await userService.updateUserById(this.userData.id, updatedDetails);\n        alert(\"User details updated successfully!\");\n      } catch (error) {\n        console.error(\"Error updating user details:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["HeaderComponent","SidebarComponent","userService","components","data","restaurantName","userRole","userData","id","username","mounted","fetchUserData","methods","JSON","parse","localStorage","getItem","restaurantId","restaurantData","getRestaurantById","name","role","error","console","updateRestaurant","updatedDetails","firstName","lastName","email","phone","birthDate","photo","restaurant","log","updateUserById","alert"],"sources":["E:\\kitchen-tech-repo\\src\\admins\\views\\profile-views\\profile-component.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <sidebar-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"sidebar\" />\r\n    <div class=\"main-content\">\r\n      <header-component :restaurant-name=\"restaurantName\" :role=\"userRole\" class=\"header\" />\r\n      <div class=\"page-container\">\r\n        <h1>Edit User Details</h1>\r\n        <form @submit.prevent=\"updateRestaurant\" class=\"form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username:</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"userData.username\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"userData.password\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Confirm Password:</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"userData.password\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"restaurant-name\">Restaurant Name:</label>\r\n            <input type=\"text\" id=\"restaurant-name\" v-model=\"userData.restaurantName\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">Phone:</label>\r\n            <input type=\"tel\" id=\"phone\" v-model=\"userData.phone\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" v-model=\"userData.email\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"city\">City:</label>\r\n            <input type=\"text\" id=\"city\" v-model=\"userData.city\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"district\">District:</label>\r\n            <input type=\"text\" id=\"district\" v-model=\"userData.district\" required />\r\n          </div>\r\n          <button type=\"submit\" class=\"submit-button\">Update</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderComponent from \"@/admins/components/header-component.vue\";\r\nimport SidebarComponent from \"@/admins/components/sidebar-component.vue\";\r\nimport userService from \"@/public/services/userService\";\r\n\r\nexport default {\r\n  components: {\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurantName: '',\r\n      userRole: '',\r\n      userData: {\r\n        id: '',\r\n        username: '',\r\n\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData();\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        const restaurantId = userData?.restaurantId;\r\n\r\n        if (restaurantId) {\r\n          const restaurantData = await userService.getRestaurantById(restaurantId);\r\n          this.restaurantName = restaurantData.name;\r\n          this.userRole = userData.role;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching restaurant data: \", error);\r\n      }\r\n    },\r\n\r\n    async updateRestaurant() {\r\n      try {\r\n        // Crea un objeto para almacenar los detalles actualizados, usando los valores actuales\r\n        const updatedDetails = {\r\n          username: this.userData.username,\r\n          firstName: this.userData.firstName,\r\n          lastName: this.userData.lastName,\r\n          email: this.userData.email,\r\n          phone: this.userData.phone,\r\n          birthDate: this.userData.birthDate, // Este campo debe existir en userDetails\r\n          photo: this.userData.photo, // Este campo también debe existir en userDetails\r\n          role: \"USER\", // Rol fijo\r\n          restaurant: {\r\n            id: this.userData.restaurant.id, // El ID del restaurante se obtiene del objeto\r\n          },\r\n        };\r\n\r\n        // Muestra en la consola los detalles que se enviarán\r\n        console.log(\"Datos enviados a la API:\", updatedDetails);\r\n\r\n        // Realiza la llamada a la API\r\n        await userService.updateUserById(this.userData.id, updatedDetails);\r\n        alert(\"User details updated successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error updating user details:\", error);\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.sidebar {\r\n  width: 280px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: #31304A;\r\n}\r\n\r\n.main-content {\r\n  margin-left: 280px;\r\n  width: calc(100% - 280px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: #5E5E99;\r\n  z-index: 1;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.page-container {\r\n  font-family: 'Red-hat-display', sans-serif;\r\n  font-weight: 100;\r\n  margin-top: 100px;\r\n  padding: 20px;\r\n  background-color: #F6F5FA;\r\n  height: calc(100vh - 100px);\r\n  overflow-y: auto;\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #5E5E99;\r\n  color: #fff;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #4b4a85;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,OAAOA,eAAc,MAAO,0CAA0C;AACtE,OAAOC,gBAAe,MAAO,2CAA2C;AACxE,OAAOC,WAAU,MAAO,+BAA+B;AAEvD,eAAe;EACbC,UAAU,EAAE;IACVH,eAAe;IACfC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;QACRC,EAAE,EAAE,EAAE;QACNC,QAAQ,EAAE;MAEZ;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMJ,QAAO,GAAIM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAMC,YAAW,GAAIV,QAAQ,EAAEU,YAAY;QAE3C,IAAIA,YAAY,EAAE;UAChB,MAAMC,cAAa,GAAI,MAAMhB,WAAW,CAACiB,iBAAiB,CAACF,YAAY,CAAC;UACxE,IAAI,CAACZ,cAAa,GAAIa,cAAc,CAACE,IAAI;UACzC,IAAI,CAACd,QAAO,GAAIC,QAAQ,CAACc,IAAI;QAC/B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAED,MAAME,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF;QACA,MAAMC,cAAa,GAAI;UACrBhB,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAACE,QAAQ;UAChCiB,SAAS,EAAE,IAAI,CAACnB,QAAQ,CAACmB,SAAS;UAClCC,QAAQ,EAAE,IAAI,CAACpB,QAAQ,CAACoB,QAAQ;UAChCC,KAAK,EAAE,IAAI,CAACrB,QAAQ,CAACqB,KAAK;UAC1BC,KAAK,EAAE,IAAI,CAACtB,QAAQ,CAACsB,KAAK;UAC1BC,SAAS,EAAE,IAAI,CAACvB,QAAQ,CAACuB,SAAS;UAAE;UACpCC,KAAK,EAAE,IAAI,CAACxB,QAAQ,CAACwB,KAAK;UAAE;UAC5BV,IAAI,EAAE,MAAM;UAAE;UACdW,UAAU,EAAE;YACVxB,EAAE,EAAE,IAAI,CAACD,QAAQ,CAACyB,UAAU,CAACxB,EAAE,CAAE;UACnC;QACF,CAAC;;QAED;QACAe,OAAO,CAACU,GAAG,CAAC,0BAA0B,EAAER,cAAc,CAAC;;QAEvD;QACA,MAAMvB,WAAW,CAACgC,cAAc,CAAC,IAAI,CAAC3B,QAAQ,CAACC,EAAE,EAAEiB,cAAc,CAAC;QAClEU,KAAK,CAAC,oCAAoC,CAAC;MAC7C,EAAE,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}