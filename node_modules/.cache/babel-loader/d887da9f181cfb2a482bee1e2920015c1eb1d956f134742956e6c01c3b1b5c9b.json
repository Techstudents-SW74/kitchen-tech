{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from \"@/public/services/authService\";\nexport default {\n  data() {\n    return {\n      username: '',\n      // Cambiamos de 'email' a 'username'\n      usernameTouched: false,\n      password: '',\n      passwordTouched: false,\n      passwordVisible: false,\n      loginError: null\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.passwordVisible = !this.passwordVisible;\n    },\n    async onSubmit() {\n      this.usernameTouched = true;\n      this.passwordTouched = true;\n\n      // Verificamos que el username y la password sean válidos\n      if (this.username && this.password.length >= 6) {\n        try {\n          // Llamamos al servicio de autenticación pasando 'username' y 'password'\n          const response = await authService.login(this.username, this.password);\n          if (response.success) {\n            // Guardamos el token en localStorage\n            localStorage.setItem('token', response.token);\n\n            // Guardamos el id en localStorage\n            localStorage.setItem('userData', JSON.stringify({\n              id: response.id\n            }));\n            localStorage.setItem('restaurantId', response.restaurantId);\n\n            // Redirigir a la vista deseada después del login\n            const basePath = `/${this.username}/${response.role}`;\n            localStorage.setItem('userData', JSON.stringify({\n              username: this.username,\n              id: response.id,\n              role: response.role,\n              restaurantId: this.restaurantId\n            }));\n            this.$router.push(`${basePath}/casing`);\n          } else {\n            this.loginError = response.message;\n          }\n        } catch (error) {\n          this.loginError = 'An error occurred. Please try again';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["authService","data","username","usernameTouched","password","passwordTouched","passwordVisible","loginError","methods","togglePasswordVisibility","onSubmit","length","response","login","success","localStorage","setItem","token","JSON","stringify","id","restaurantId","basePath","role","$router","push","message","error"],"sources":["E:\\kitchen-tech-repo\\src\\public\\views\\login-page.vue"],"sourcesContent":["<template>\r\n  <div class=\"card-container\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <img class=\"logo\" src=\"../../../public/assets/images/logo.png\" alt=\"brand-logo\"/>\r\n        <p class=\"card-title\">Sign In</p>\r\n      </div>\r\n\r\n      <!-- Formulario para el username -->\r\n      <form @submit.prevent=\"onSubmit\">\r\n        <!-- Input para el username -->\r\n        <div class=\"form-field\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              v-model=\"username\"\r\n              placeholder=\"Ex. fcastro\"\r\n          />\r\n          <span v-if=\"!username && usernameTouched\">Please enter your username</span>\r\n        </div>\r\n\r\n        <!-- Input para la contraseña -->\r\n        <div class=\"form-field\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              placeholder=\"Enter your password\"\r\n          />\r\n          <img\r\n              :src=\"passwordVisible ? require('/public/assets/images/show.png') : require('/public/assets/images/hide.png')\"\r\n              @click=\"togglePasswordVisibility\"\r\n              class=\"password-toggle\"\r\n              alt=\"toggle visibility\"\r\n          />\r\n          <span v-if=\"!password && passwordTouched\">Please enter a password</span>\r\n          <span v-if=\"password.length > 0 && password.length < 6\">Your password must have at least 6 characters</span>\r\n        </div>\r\n\r\n        <button class=\"login-button\" type=\"submit\">Sign In</button>\r\n        <div class=\"signup-redirect\">\r\n          <router-link to=\"/signup\">Don't have an account? Sign up</router-link>\r\n        </div>\r\n        <p v-if=\"loginError\" class=\"error-message\">{{ loginError }}</p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from \"@/public/services/authService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',  // Cambiamos de 'email' a 'username'\r\n      usernameTouched: false,\r\n      password: '',\r\n      passwordTouched: false,\r\n      passwordVisible: false,\r\n      loginError: null\r\n    };\r\n  },\r\n  methods: {\r\n    togglePasswordVisibility() {\r\n      this.passwordVisible = !this.passwordVisible;\r\n    },\r\n    async onSubmit() {\r\n      this.usernameTouched = true;\r\n      this.passwordTouched = true;\r\n\r\n      // Verificamos que el username y la password sean válidos\r\n      if (this.username && this.password.length >= 6) {\r\n        try {\r\n          // Llamamos al servicio de autenticación pasando 'username' y 'password'\r\n          const response = await authService.login(this.username, this.password);\r\n\r\n          if (response.success) {\r\n            // Guardamos el token en localStorage\r\n            localStorage.setItem('token', response.token);\r\n\r\n            // Guardamos el id en localStorage\r\n            localStorage.setItem('userData', JSON.stringify({ id: response.id }));\r\n\r\n            localStorage.setItem('restaurantId', response.restaurantId);\r\n\r\n            // Redirigir a la vista deseada después del login\r\n            const basePath = `/${this.username}/${response.role}`;\r\n            localStorage.setItem('userData', JSON.stringify({ username: this.username, id: response.id, role: response.role, restaurantId: this.restaurantId }));\r\n            this.$router.push(`${basePath}/casing`);\r\n          } else {\r\n            this.loginError = response.message;\r\n          }\r\n        } catch (error) {\r\n          this.loginError = 'An error occurred. Please try again';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #F6F5FA;\r\n  font-family: 'Red-hat-display', sans-serif;\r\n}\r\n.card {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #D3D2E5;\r\n  color: #F6F5FA;\r\n  padding: 50px 80px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-bottom: 30px;\r\n}\r\n.logo{\r\n  width: 150px;\r\n}\r\n.card-title {\r\n  margin: 0;\r\n  font-size: 2.4rem;\r\n  font-weight: 800;\r\n  color: #31304A;\r\n}\r\n\r\n.form-field {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n.form-field label {\r\n  font-weight: 700;\r\n  color: #31304A;\r\n}\r\n.form-field input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #31304A;\r\n  margin: 10px 0;\r\n  font-weight: 500;\r\n  box-sizing: border-box;\r\n}\r\n.form-field span {\r\n  color: #b14343;\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  margin: 0 0 16px 0;\r\n  color: #F6F5FA;\r\n  padding: 16px;\r\n  background: #31304A;\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n}\r\n.signup-redirect {\r\n  text-align: right;\r\n  margin-right: 5px;\r\n}\r\n.signup-redirect a {\r\n  color: #31304A;\r\n}\r\n.error-message{\r\n  color: #b14343;\r\n  font-size: 0.8rem;\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n"],"mappings":";AAoDA,OAAOA,WAAU,MAAO,+BAA+B;AAEvD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAG;MACfC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE,KAAK;MACtBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACH,eAAc,GAAI,CAAC,IAAI,CAACA,eAAe;IAC9C,CAAC;IACD,MAAMI,QAAQA,CAAA,EAAG;MACf,IAAI,CAACP,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACE,eAAc,GAAI,IAAI;;MAE3B;MACA,IAAI,IAAI,CAACH,QAAO,IAAK,IAAI,CAACE,QAAQ,CAACO,MAAK,IAAK,CAAC,EAAE;QAC9C,IAAI;UACF;UACA,MAAMC,QAAO,GAAI,MAAMZ,WAAW,CAACa,KAAK,CAAC,IAAI,CAACX,QAAQ,EAAE,IAAI,CAACE,QAAQ,CAAC;UAEtE,IAAIQ,QAAQ,CAACE,OAAO,EAAE;YACpB;YACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,KAAK,CAAC;;YAE7C;YACAF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEE,IAAI,CAACC,SAAS,CAAC;cAAEC,EAAE,EAAER,QAAQ,CAACQ;YAAG,CAAC,CAAC,CAAC;YAErEL,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,QAAQ,CAACS,YAAY,CAAC;;YAE3D;YACA,MAAMC,QAAO,GAAI,IAAI,IAAI,CAACpB,QAAQ,IAAIU,QAAQ,CAACW,IAAI,EAAE;YACrDR,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEE,IAAI,CAACC,SAAS,CAAC;cAAEjB,QAAQ,EAAE,IAAI,CAACA,QAAQ;cAAEkB,EAAE,EAAER,QAAQ,CAACQ,EAAE;cAAEG,IAAI,EAAEX,QAAQ,CAACW,IAAI;cAAEF,YAAY,EAAE,IAAI,CAACA;YAAa,CAAC,CAAC,CAAC;YACpJ,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAGH,QAAQ,SAAS,CAAC;UACzC,OAAO;YACL,IAAI,CAACf,UAAS,GAAIK,QAAQ,CAACc,OAAO;UACpC;QACF,EAAE,OAAOC,KAAK,EAAE;UACd,IAAI,CAACpB,UAAS,GAAI,qCAAqC;QACzD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}